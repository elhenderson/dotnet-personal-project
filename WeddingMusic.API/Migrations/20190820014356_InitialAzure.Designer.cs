// <auto-generated />
using System;
using Game.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Game.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190820014356_InitialAzure")]
    partial class InitialAzure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeddingMusic.API.Models.Lineup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BridalParty");

                    b.Property<string>("Family");

                    b.Property<string>("Postlude");

                    b.Property<string>("Prelude");

                    b.Property<string>("Processional");

                    b.Property<string>("Recessional");

                    b.Property<string>("Unity");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lineup");
                });

            modelBuilder.Entity("WeddingMusic.API.Models.SavedSong", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("SongId");

                    b.HasKey("UserId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("SavedSongs");
                });

            modelBuilder.Entity("WeddingMusic.API.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist");

                    b.Property<string>("Genre");

                    b.Property<string>("Image");

                    b.Property<string>("SampleArtist");

                    b.Property<bool>("Saved");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("WeddingMusic.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Instruments");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Street");

                    b.Property<string>("Username");

                    b.Property<string>("Venue");

                    b.Property<string>("WeddingDate");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeddingMusic.API.Models.Lineup", b =>
                {
                    b.HasOne("WeddingMusic.API.Models.User", "User")
                        .WithMany("Lineup")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WeddingMusic.API.Models.SavedSong", b =>
                {
                    b.HasOne("WeddingMusic.API.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WeddingMusic.API.Models.User", "User")
                        .WithMany("Song")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
