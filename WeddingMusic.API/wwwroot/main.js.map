{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lineup.resolver.ts","webpack:///./src/app/_resolvers/savedSong.resolver.ts","webpack:///./src/app/_resolvers/song.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/lineup.service.ts","webpack:///./src/app/_services/song.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lineup/lineup.component.css","webpack:///./src/app/lineup/lineup.component.html","webpack:///./src/app/lineup/lineup.component.ts","webpack:///./src/app/lineup/lineupEdit/lineupEdit.component.css","webpack:///./src/app/lineup/lineupEdit/lineupEdit.component.html","webpack:///./src/app/lineup/lineupEdit/lineupEdit.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/saved-songs/saved-songs.component.css","webpack:///./src/app/saved-songs/saved-songs.component.html","webpack:///./src/app/saved-songs/saved-songs.component.ts","webpack:///./src/app/songs/song-card/song-card.component.css","webpack:///./src/app/songs/song-card/song-card.component.html","webpack:///./src/app/songs/song-card/song-card.component.ts","webpack:///./src/app/songs/song/song.component.css","webpack:///./src/app/songs/song/song.component.html","webpack:///./src/app/songs/song/song.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AACU;AACG;AACQ;AAMhE;IACE,mBAAoB,WAAwB,EAAU,MAAc,EAAU,QAAyB;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAiB;IAAG,CAAC;IAC3G,+BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAVU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEiC,kEAAW,EAAkB,sDAAM,EAAoB,0EAAe;OAD5F,SAAS,CAWrB;IAAD,gBAAC;CAAA;AAXqB;;;;;;;;;;;;;;;;;;;;;;ACTqB;AAK3C;IAAA;IAOA,CAAC;IANC,6CAAa,GAAb,UAAc,SAA8B;QAC1C,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,OAAO,CAAC,sEAAsE,CAAC,CAAC;QACzF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IANU,qBAAqB;QADjC,gEAAU,EAAE;OACA,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;ACElC;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVwC;AACiC;AAEd;AACI;AAC1B;AACM;AACY;AAGxD;IACE,wBAAoB,aAA4B,EAAU,MAAc,EAC9D,QAAyB,EAAU,WAAwB;QADjD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC9D,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEzE,gCAAO,GAAP,UAAQ,KAA6B;QAArC,iBAUC;QARC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aACxE,IAAI,CACH,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAdU,cAAc;QAD1B,gEAAU,EAAE;yCAEwB,sEAAa,EAAkB,sDAAM;YACpD,0EAAe,EAAuB,kEAAW;OAF1D,cAAc,CAgB1B;IAAD,qBAAC;CAAA;AAhB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACiC;AACV;AAC1B;AACM;AACY;AAEA;AAGxD;IAME,2BAAoB,WAAwB,EAAU,MAAc,EAC1D,QAAyB,EAAU,WAAwB;QADjD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QANrE,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,OAAO,CAAC;QACrB,WAAM,GAAG,CAAC,CAAC;IAG6D,CAAC;IAEzE,mCAAO,GAAP,UAAQ,KAA6B;QAArC,iBASC;QARC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CACvG,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAlBU,iBAAiB;QAD7B,gEAAU,EAAE;yCAOsB,kEAAW,EAAkB,sDAAM;YAChD,0EAAe,EAAuB,kEAAW;OAP1D,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACiC;AACV;AAC1B;AACM;AACY;AAEA;AAGxD;IAKE,sBAAoB,WAAwB,EAAU,MAAc,EAC1D,QAAyB,EAAU,WAAwB;QADjD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QALrE,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,WAAM,GAAG,CAAC,CAAC;IAG6D,CAAC;IAEzE,8BAAO,GAAP,UAAQ,KAA6B;QAArC,iBAQC;QAPC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5F,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAhBU,YAAY;QADxB,gEAAU,EAAE;yCAMsB,kEAAW,EAAkB,sDAAM;YAChD,0EAAe,EAAuB,kEAAW;OAN1D,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;ACVkB;AAM3C;IAEE;IAAgB,CAAC;IAEjB,iCAAO,GAAP,UAAQ,OAAe,EAAE,UAAqB;QAC5C,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YAClC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,UAAU,EAAE,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,CAAC,EAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,+BAAK,GAAL,UAAM,OAAe;QACnB,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAED,iCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,iCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IA1BU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CA4B3B;IAAD,sBAAC;CAAA;AA5B2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACO;AACf;AACiB;AACO;AAEV;AAKjD;IAKA,qBAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAJxE,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAI,OAAO,CAAC;QACxC,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAGyC,CAAC;IAE7E,2BAAK,GAAL,UAAM,KAAU;QAAhB,iBAWC;QAVC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,KAAK,CAAC;aACjD,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,IAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,8BAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IA3BU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMwB,+DAAU,EAAyB,6DAAa;OAL7D,WAAW,CA6BvB;IAAD,kBAAC;CAAA;AA7BuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AACuF;AACpF;AACF;AAG5C;IAAA;IA6BA,CAAC;IA5BC,oCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAChD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,iEAAU,CAAC,eAAK;YACd,EAAE,CAAC,CAAC,KAAK,YAAY,sEAAiB,CAAC,CAAC,CAAC;gBACvC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,uDAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBACD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,uDAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;gBACD,IAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAChE,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACrB,MAAM,CAAC,uDAAU,CAAC,gBAAgB,CAAC,CAAC;gBACtC,CAAC;gBACD,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;gBACvC,IAAI,gBAAgB,GAAG,EAAE,CAAC;gBAC1B,EAAE,CAAC,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACnD,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;wBAC9B,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACrB,gBAAgB,IAAI,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;wBAC9C,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,uDAAU,CAAC,gBAAgB,IAAI,WAAW,IAAI,cAAc,CAAC,CAAC;YACvE,CAAC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA5BU,gBAAgB;QAD5B,gEAAU,EAAE;OACA,gBAAgB,CA6B5B;IAAD,uBAAC;CAAA;AA7B4B;AA+BtB,IAAM,wBAAwB,GAAG;IACtC,OAAO,EAAE,sEAAiB;IAC1B,QAAQ,EAAE,gBAAgB;IAC1B,KAAK,EAAE,IAAI;CACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCyC;AACgB;AACT;AAGI;AAKtD;IAIE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAC7B,cAAS,GAAG,IAAI,mEAAgB,EAAE;IAEM,CAAC;IAEzC,iCAAS,GAAT,UAAU,EAAE;QACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IAE9D,CAAC;IAED,kCAAU,GAAV,UAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC;IACzE,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;IAC9D,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAM;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IArBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,aAAa,CAsBzB;IAAD,oBAAC;CAAA;AAtByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViB;AACgC;AAChB;AAGH;AACnB;AAErC,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;KAC3D,CAAC;CACH,CAAC;AAMF;IAGE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IAEW,CAAC;IAEzC,8BAAQ,GAAR,UAAS,IAAK,EAAE,YAAa,EAAE,UAAW,EAAE,UAAW,EAAE,MAAO;QAC9D,IAAM,eAAe,GAA4B,IAAI,kEAAe,EAAU,CAAC;QAE/E,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAE9B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC;QAID,EAAE,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,CAAC,CAAC;YAC3B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC3C,CAAC;QAGD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAC,OAAO,EAAE,UAAU,EAAE,MAAM,UAAC,CAAC;aACjF,IAAI,CACH,0DAAG,CAAC,kBAAQ;YACV,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YACvC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9E,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;IACxE,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK,EAAE,MAAM;QACtB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QAC9E,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACD,mCAAa,GAAb,UAAc,KAAK,EAAE,MAAM;QACzB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,cAAc,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QAClF,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,+BAAS,GAAT,UAAU,MAAc,EAAE,MAAc;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,MAAM,GAAG,cAAc,GAAG,MAAM,EAAE,EAAE,CAAC,CAAC;IACxF,CAAC;IA1DU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,WAAW,CA4DvB;IAAD,kBAAC;CAAA;AA5DuB;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBmB;AACoB;AACJ;AAQ3D;IAGE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IAEW,CAAC;IAEzC,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAXU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,WAAW,CAYvB;IAAD,kBAAC;CAAA;AAZuB;;;;;;;;;;;;ACVxB,mB;;;;;;;;;;;ACAA,+E;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACW;AACD;AAOpD;IAGE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAEY,CAAC;IAEhD,qDAAqD;IACrD,+BAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAXU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIiC,kEAAW;OAHjC,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACa;AACU;AACa;AACF;AACuB;AACnD;AAEA;AACI;AACI;AACD;AACY;AACO;AACb;AACc;AACd;AACvB;AACY;AACM;AACA;AACmB;AAC3B;AACgC;AACpB;AACG;AACL;AACuB;AACtB;AACU;AAE7D;IACJ,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAsDD;IAAA;IAAyB,CAAC;IAAb,SAAS;QApDrB,8DAAQ,CAAC;YACP,YAAY,EAAE;gBACX,2DAAY;gBACZ,+DAAY;gBACZ,mEAAa;gBACb,+EAAiB;gBACjB,+EAAiB;gBACjB,yEAAa;gBACb,uFAAiB;gBACjB,uFAAmB;gBACnB,yEAAe;gBACf,4FAAmB;gBACnB,sEAAc;aAChB;YACD,OAAO,EAAE;gBACN,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,4FAAuB;gBACvB,qEAAmB;gBACnB,qEAAmB;gBACnB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,gEAAkB,CAAC,OAAO,EAAE;gBAC5B,yDAAW,CAAC,OAAO,EAAE;gBACrB,4DAAY,CAAC,OAAO,CAAC,kDAAS,CAAC;gBAC/B,6DAAS,CAAC,OAAO,CAAC;oBACf,MAAM,EAAE;wBACL,WAAW;wBACX,kBAAkB,EAAE,CAAC,gBAAgB,CAAC;wBACtC,iBAAiB,EAAE,CAAC,yBAAyB,CAAC;qBAChD;iBACH,CAAC;aACJ;YACD,SAAS,EAAE;gBACR,mEAAW;gBACX,qEAAmB;gBACnB,qFAAwB;gBACxB,6DAAS;gBACT,mEAAW;gBACX,mEAAW;gBACX,uEAAa;gBACb,0EAAc;gBACd,4FAAqB;gBACrB,sEAAY;gBACZ,gFAAiB;aACnB;YACD,SAAS,EAAE;gBACR,2DAAY;aACd;SACH,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxFtB,mB;;;;;;;;;;;ACAA,g/B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AACM;AACI;AAO5D;IAIE,uBAAoB,IAAgB,EAAU,WAAwB,EAAU,aAA4B;QAAxF,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAH5G,iBAAY,GAAG,KAAK,CAAC;QACrB,cAAS,GAAG,KAAK,CAAC;IAE8F,CAAC;IAEjH,gCAAQ,GAAR;IACA,CAAC;IAED,sCAAc,GAAd;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAGD,0CAAkB,GAAlB,UAAmB,YAAqB;QACtC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,uCAAe,GAAf,UAAgB,SAAkB;QAChC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,gCAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IA5BU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAK0B,+DAAU,EAAuB,kEAAW,EAAyB,sEAAa;OAJjG,aAAa,CAgCzB;IAAD,oBAAC;CAAA;AAhCyB;;;;;;;;;;;;ACV1B,8BAA8B,uBAAuB,GAAG,kBAAkB,wBAAwB,GAAG,mBAAmB,+BAA+B,GAAG,QAAQ,qBAAqB,GAAG,C;;;;;;;;;;;ACA1L,4PAA4P,MAAM,8KAA8K,MAAM,0LAA0L,MAAM,2LAA2L,MAAM,6KAA6K,MAAM,yLAAyL,MAAM,mLAAmL,MAAM,qL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhzC;AAEO;AACD;AACI;AAO5D;IAKE,yBAAoB,KAAqB,EAAU,WAAwB,EAAU,aAA4B,EAAU,MAAc;QAArH,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHzI,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;IAEqC,CAAC;IAE9I,kCAAQ,GAAR;QAAA,iBA8BC;QA7BC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAC5B,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;oBACzF,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,wFAAwF;YACxF,sFAAsF;YACtF,gGAAgG;YAChG,0CAA0C;YAC1C,gCAAgC;YAChC,oGAAoG;YACpG,IAAI;YACJ,mCAAmC;YACnC,sFAAsF;YACtF,IAAI;YAEJ,yCAAyC;YACzC,kGAAkG;YAClG,IAAI;YAGJ,0FAA0F;QAC5F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAe,GAAf;QACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,SAAE,CAAC,MAAM,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;YACnH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,8CAAoB,GAApB,UAAqB,cAAuB;QAC1C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IArDU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAM2B,8DAAc,EAAuB,kEAAW,EAAyB,sEAAa,EAAkB,sDAAM;OAL9H,eAAe,CAsD3B;IAAD,sBAAC;CAAA;AAtD2B;;;;;;;;;;;;ACX5B,8BAA8B,uBAAuB,GAAG,kBAAkB,wBAAwB,GAAG,mBAAmB,+BAA+B,GAAG,WAAW,uBAAuB,GAAG,QAAQ,qBAAqB,GAAG,C;;;;;;;;;;;ACA/N,mkBAAmkB,gBAAgB,wDAAwD,sGAAsG,MAAM,6RAA6R,uGAAuG,MAAM,sSAAsS,sGAAsG,MAAM,iTAAiT,sGAAsG,MAAM,qSAAqS,sGAAsG,MAAM,mSAAmS,sGAAsG,MAAM,ySAAyS,sGAAsG,MAAM,0Z;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApgG;AAE5B;AAC7B;AAC6B;AACJ;AACJ;AAO7D;IAaE,6BAAoB,KAAqB,EAAS,MAAc,EAAU,QAAyB,EACxF,aAA4B,EAAU,WAAwB;QADrD,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QACxF,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAb/D,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAIhD,iBAAY,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;IAS3B,CAAC;IAP9E,gDAAkB,GAAlB,UAAmB,MAAW;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC;IACH,CAAC;IAKD,sCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,SAAE,CAAC,MAAM,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;YACnH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAY,GAAZ,UAAa,YAAY;QAAzB,iBAoBC;QAnBC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1F,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACvC,IAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;YACxD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;YACxD,CAAC;QACH,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/F,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACtD,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,wCAAU,GAAV,UAAW,SAAS,EAAE,OAAO,EAAE,WAAW;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,IAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,WAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,EAA/B,CAA+B,CAAC,CAAC;QAC1F,IAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,SAAE,CAAC,MAAM,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;QACzF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAjES;QAAT,4DAAM,EAAE;;iEAAuC;IACzB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,qDAAM;yDAAC;IAKxC;QADC,kEAAY,CAAC,qBAAqB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iEAK/C;IAXU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAc2B,8DAAc,EAAiB,sDAAM,EAAoB,iFAAe;YACzE,6EAAa,EAAuB,yEAAW;OAd9D,mBAAmB,CAmE/B;IAAD,0BAAC;CAAA;AAnE+B;;;;;;;;;;;;ACbhC,mB;;;;;;;;;;;ACAA,21B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAwE;AAChB;AACQ;AACvB;AAOzC;IAIE,wBAAoB,WAAwB,EAAU,QAAyB,EAAU,MAAc;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHvG,UAAK,GAAQ,EAAE,CAAC;QACN,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEgE,CAAC;IAE5G,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QAClD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,EAAE;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAnBS;QAAT,4DAAM,EAAE;;uDAAkC;IAFhC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKiC,kEAAW,EAAoB,0EAAe,EAAkB,sDAAM;OAJ5F,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACV3B,oDAAoD,oBAAoB,GAAG,eAAe,oBAAoB,GAAG,0CAA0C,eAAe,oBAAoB,KAAK,GAAG,C;;;;;;;;;;;ACAtM,8bAA8b,iBAAiB,6GAA6G,mDAAmD,o7BAAo7B,mDAAmD,0wB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApiD;AACM;AACQ;AACvB;AAOzC;IAGE,sBAAmB,WAAwB,EAAU,QAAyB,EAAU,MAAc;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFtG,UAAK,GAAQ,EAAE,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;IACuF,CAAC;IAE3G,+BAAQ,GAAR;IACA,CAAC;IAED,YAAY;IACZ,2DAA2D;IAC3D,uDAAuD;IACvD,kBAAkB;IAClB,kCAAkC;IAClC,eAAe;IACf,0CAA0C;IAC1C,QAAQ;IACR,IAAI;IAEJ,+BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,6BAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAED,gDAAyB,GAAzB;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAlCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAIgC,kEAAW,EAAoB,0EAAe,EAAkB,sDAAM;OAH3F,YAAY,CAoCxB;IAAD,mBAAC;CAAA;AApCwB;;;;;;;;;;;;ACVzB,mB;;;;;;;;;;;ACAA,0NAA0N,2FAA2F,2OAA2O,2FAA2F,0sBAA0sB,qLAAqL,ygBAAygB,gGAAgG,sbAAsb,gGAAgG,42D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1iF;AAEvB;AACQ;AACiB;AAGxC;AACmB;AAO5D;IAME,2BAAoB,WAAwB,EAAU,QAAyB,EACrE,WAAwB,EAAU,MAAc,EAAU,aAA4B;QAD5E,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QACrE,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QANtF,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;IAMsD,CAAC;IAErG,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,cAAc,EAAE,iBAAiB;SAClC,CAAC;QACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,8CAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACvF,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IAC/C,CAAC;IAED,kDAAsB,GAAtB,UAAuB,CAAY;QACjC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IAChG,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAaC;QAZC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBAC7C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACnD,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,EAAE;gBACD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;oBAC1C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,wCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,UAAU,CAAC;YACT,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxE,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IArDS;QAAT,4DAAM,EAAE;;6DAAqC;IADnC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOiC,kEAAW,EAAoB,0EAAe;YACxD,0DAAW,EAAkB,sDAAM,EAAyB,sEAAa;OAPrF,iBAAiB,CAwD7B;IAAD,wBAAC;CAAA;AAxD6B;;;;;;;;;;;;;ACd9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACM;AACA;AACc;AACzB;AACa;AACiB;AACC;AACtB;AACU;AAE7D,IAAM,SAAS,GAAW;IAC/B,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;IACpC;QACE,IAAI,EAAE,EAAE;QACR,qBAAqB,EAAE,QAAQ;QAC/B,WAAW,EAAE,CAAC,4DAAS,CAAC;QACxB,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,yEAAc,EAAC,EAAC;YAC/E,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2FAAmB,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,yEAAc,EAAC,EAAE,aAAa,EAAE,CAAC,2FAAqB,CAAC,EAAC;YAChI,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,wEAAa,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,qEAAY,EAAC,EAAC;YACxE,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,+EAAiB,EAAC,EAAC;SAC1F;KACF;IACD,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC;CAChD,CAAC;;;;;;;;;;;;AC1BF,mB;;;;;;;;;;;ACAA,6FAA6F,uBAAuB,sfAAsf,eAAe,yWAAyW,eAAe,0yBAA0yB,sBAAsB,sBAAsB,qBAAqB,+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1yD;AAGM;AACA;AACP;AACe;AAOhE;IAiBE,6BAAoB,WAAwB,EAAU,WAAwB,EACpE,KAAqB,EAAU,QAAyB;QAD9C,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QACpE,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAdlE,eAAU,GAAQ,EAAE,CAAC;QACrB,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC;YAC7B,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAC;YAC1C,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAC;YAChC,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;SACnC,CAAC;QACF,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC;SACrC,CAAC;IAGoE,CAAC;IAEvE,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACjC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAED,yCAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uCAAS,GAAT;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAChF,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aACzE,SAAS,CAAC,UAAC,GAA4B;YACtC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAhDU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAkBiC,kEAAW,EAAuB,kEAAW;YAC7D,8DAAc,EAAoB,0EAAe;OAlBvD,mBAAmB,CAkD/B;IAAD,0BAAC;CAAA;AAlD+B;;;;;;;;;;;;ACbhC,mCAAmC,uCAAuC,uCAAuC,+BAA+B,2CAA2C,iBAAiB,GAAG,eAAe,uCAAuC,uCAAuC,+BAA+B,2CAA2C,GAAG,uBAAuB,qBAAqB,uBAAuB,GAAG,mBAAmB,uBAAuB,iBAAiB,YAAY,cAAc,uBAAuB,sBAAsB,eAAe,GAAG,2CAA2C,cAAc,eAAe,GAAG,cAAc,qCAAqC,GAAG,gBAAgB,kBAAkB,GAAG,gBAAgB,uBAAuB,GAAG,0CAA0C,eAAe,oBAAoB,KAAK,GAAG,C;;;;;;;;;;;ACAx3B,kMAAkM,YAAY,wtBAAwtB,YAAY,4EAA4E,aAAa,wTAAwT,2FAA2F,YAAY,MAAM,aAAa,0wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA52C;AAEpB;AACQ;AACpB;AACc;AACF;AACF;AACkB;AAEZ;AAWjE;IAOE,2BAAoB,WAAwB,EAAU,QAAyB,EAAU,KAAqB,EAC3G,IAAgB,EAAU,WAAwB,EAAU,YAA4B,EAC/E,WAAwB,EAAU,aAA4B;QAFtD,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QACjF,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAC/E,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE/E,oCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/E,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,oCAAQ,GAAR,UAAS,MAAc;QAAvB,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACrF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qFAAqF;IACrF,uCAAW,GAAX,UAAY,KAAK,EAAE,MAAM;QAAzB,iBAqBC;QApBC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,GAAa;YACjE,aAAa;YACb,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC7B,aAAa;gBACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,uCAAuC,CAAC,CAAC;gBAChF,aAAa;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpC,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,QAAkB;oBACzE,aAAa;oBACb,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;wBACpC,aAAa;wBACX,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,uCAAuC,CAAC,CAAC;oBACvF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;oBACtE,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YACtE,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,QAA0B;QAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAI,IAAI,CAAC,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,IAAI,CAAC,MAAQ,EAAC,CAAC,CAAC;QAC/G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;QAC3E,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/F,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACtD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QAEE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IA1EQ;QAAR,2DAAK,EAAE;;mDAAY;IADT,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAQiC,yEAAW,EAAoB,iFAAe,EAAiB,8DAAc;YACrG,+DAAU,EAAuB,yEAAW,EAAwB,4DAAc;YAClE,0DAAW,EAAyB,6EAAa;OAT/D,iBAAiB,CA6E7B;IAAD,wBAAC;CAAA;AA7E6B;;;;;;;;;;;;ACrB9B,mB;;;;;;;;;;;ACAA,4FAA4F,uBAAuB,4VAA4V,2JAA2J,eAAe,yWAAyW,eAAe,0yBAA0yB,sBAAsB,sBAAsB,qBAAqB,mC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1yD;AACS;AACQ;AAElB;AAGgB;AACJ;AAO7D;IAgBE,uBAAoB,WAAwB,EAAU,QAAyB,EACpE,KAAqB,EAAU,aAA4B,EAAU,WAAwB;QADpF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QACpE,UAAK,GAAL,KAAK,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAfxG,eAAU,GAAQ,EAAE,CAAC;QACrB,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC;YAC7B,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAC;YAC1C,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAC;YAChC,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;SACnC,CAAC;QACF,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC;SACrC,CAAC;IAI0G,CAAC;IAE7G,gCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACjC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;QAC5C,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,oCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,iCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;aAChH,SAAS,CAAC,UAAC,GAA4B;YACtC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IA/CU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAiBiC,kEAAW,EAAoB,0EAAe;YAC7D,8DAAc,EAAyB,6EAAa,EAAuB,yEAAW;OAjB7F,aAAa,CAiDzB;IAAD,oBAAC;CAAA;AAjDyB;;;;;;;;;;;;;ACf1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,4BAA4B;CACrC,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n\n    this.alertify.error('You must be logged in to access this page');\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanDeactivate } from \"@angular/router\";\nimport { LineupEditComponent } from \"../lineup/lineupEdit/lineupEdit.component\";\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate<LineupEditComponent> {\n  canDeactivate(component: LineupEditComponent) {\n    if (component.editForm.dirty && !component.editForm.submitted) {\n      return confirm('Are you sure you want to continue? Any unsaved changes will be lost!');\n    }\n    return true;\n  }\n}","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import {Injectable} from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { Lineup } from '../_models/lineup';\nimport { LineupService } from '../_services/lineup.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../_services/auth.service';\n\n@Injectable()\nexport class LineupResolver implements Resolve<Lineup> {\n  constructor(private lineupService: LineupService, private router: Router,\n    private alertify: AlertifyService, private authService: AuthService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Lineup> {\n\n    return this.lineupService.getLineup(this.authService.decodedToken.nameid)\n    .pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/home']);\n        return of(null);\n      })\n    );\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../_services/auth.service';\nimport { Song } from '../_models/song';\nimport { SongService } from '../_services/song.service';\n\n@Injectable()\nexport class SavedSongResolver implements Resolve<Song[]> {\n  pageNumber = 1;\n  pageSize = 5;\n  savedParam = 'Saved';\n  userId = 0;\n\n  constructor(private songService: SongService, private router: Router,\n    private alertify: AlertifyService, private authService: AuthService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Song[]> {\n    this.userId = this.authService.decodedToken.nameid;\n    return this.songService.getSongs(this.pageNumber, this.pageSize, null, this.savedParam, this.userId).pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/home']);\n        return of(null);\n      })\n    );\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../_services/auth.service';\nimport { Song } from '../_models/song';\nimport { SongService } from '../_services/song.service';\n\n@Injectable()\nexport class SongResolver implements Resolve<Song[]> {\n  pageNumber = 1;\n  pageSize = 5;\n  userId = 0;\n\n  constructor(private songService: SongService, private router: Router,\n    private alertify: AlertifyService, private authService: AuthService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Song[]> {\n    return this.songService.getSongs(this.pageNumber, this.pageSize, null, null, this.userId).pipe(\n      catchError(error => {\n        this.alertify.error('Problem retrieving data');\n        this.router.navigate(['/home']);\n        return of(null);\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\n  constructor() { }\n\n  confirm(message: string, okCallback: () => any) {\n    alertify.confirm(message, function(e) {\n      if (e) {\n        okCallback();\n      } else {}\n    });\n  }\n\n  success(message: string) {\n    alertify.success(message);\n  }\n\n  error(message: string) {\n    alertify.error(message);\n  }\n\n  warning(message: string) {\n    alertify.warning(message);\n  }\n\n  message(message: string) {\n    alertify.message(message);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { LineupService } from './lineup.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl +  'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\nconstructor(private http: HttpClient, private lineupService: LineupService) { }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'login', model)\n      .pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n          }\n        })\n      );\n  }\n\n  register(user: User) {\n    return this.http.post(this.baseUrl + 'register', user);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse) {\n          if (error.status === 401) {\n            return throwError(error.statusText);\n          }\n          if (error.status === 400) {\n            return throwError(error.error);\n          }\n          const applicationError = error.headers.get('Application-Error');\n          if (applicationError) {\n            return throwError(applicationError);\n          }\n          const serverError = error.error.errors;\n          let modelStateErrors = '';\n          if (serverError && typeof serverError === 'object') {\n            for (const key in serverError) {\n              if (serverError[key]) {\n                modelStateErrors += serverError[key] + '\\n';\n              }\n            }\n          }\n          return throwError(modelStateErrors || serverError || 'Server Error');\n        }\n      })\n    );\n  }\n}\n\nexport const ErrorInterceptorProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptor,\n  multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Lineup } from '../_models/lineup';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LineupService {\n  baseUrl = environment.apiUrl;\n  jwtHelper = new JwtHelperService()\n\n  constructor(private http: HttpClient) { }\n\n  getLineup(id): Observable<Lineup> {\n    return this.http.get<Lineup>(this.baseUrl + 'lineup/' + id);\n\n  }\n\n  editLineup(id): Observable<Lineup> {\n    return this.http.get<Lineup>(this.baseUrl + 'lineup/' + id + '/edit/');\n  }\n\n  updateLineup(id: number, lineup: Lineup) {\n    return this.http.put(this.baseUrl + 'lineup/' + id, lineup);\n  }\n\n  createLineup(userId) {\n    return this.http.post(this.baseUrl + 'lineup/' + +userId, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Song } from '../_models/song';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getSongs(page?, itemsPerPage?, songParams?, savedParam?, userId?): Observable<PaginatedResult<Song[]>> {\n    const paginatedResult: PaginatedResult<Song[]> = new PaginatedResult<Song[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n\n\n\n    if (songParams != null) {\n        params = params.append('genre', songParams.genre);\n        params = params.append('orderBy', songParams.orderBy);\n    }\n\n    if (savedParam === 'Saved') {\n      params = params.append('saved', 'true');\n    }\n\n    if (userId != null) {\n      params = params.append('userId', userId);\n    }\n\n\n    return this.http.get<Song[]>(this.baseUrl + 'songs/', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getSong(id): Observable<Song> {\n    return this.http.get<Song>(this.baseUrl + 'songs/' + id, httpOptions);\n  }\n\n  getSpotify(title, artist) {\n    const track = this.http.get(this.baseUrl + 'spotify/' + title + ' ' + artist);\n    return track;\n  }\n  getSpotifyAlt(title, artist) {\n    const track = this.http.get(this.baseUrl + 'spotify/alt/' + title + ' ' + artist);\n    return track;\n  }\n\n  savedSong(userId: number, songId: number) {\n    return this.http.post(this.baseUrl + 'songs/' + userId + '/saved-song/' + songId, {});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl + 'users');\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport {AuthService} from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService) {}\n\n  // tslint:disable-next-line: use-life-cycle-interface\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatDatepickerModule, MatNativeDateModule} from '@angular/material';\nimport {BsDropdownModule, BsDatepickerModule, PaginationModule, ModalModule} from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AuthService } from './_services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { SongComponent } from './songs/song/song.component';\nimport { SavedSongsComponent } from './saved-songs/saved-songs.component';\nimport { LineupComponent } from './lineup/lineup.component';\nimport { appRoutes } from './routes';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { UserService } from './_services/user.service';\nimport { SongService } from './_services/song.service';\nimport { SongCardComponent } from './songs/song-card/song-card.component';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { LineupEditComponent } from './lineup/lineupEdit/lineupEdit.component';\nimport { LineupService } from './_services/lineup.service';\nimport { LineupResolver } from './_resolvers/lineup.resolver';\nimport { LoginComponent } from './login/login.component';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { SongResolver } from './_resolvers/song.resolver';\nimport { SavedSongResolver } from './_resolvers/savedSong.resolver';\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      RegisterComponent,\n      RegisterComponent,\n      SongComponent,\n      SongCardComponent,\n      SavedSongsComponent,\n      LineupComponent,\n      LineupEditComponent,\n      LoginComponent\n   ],\n   imports: [\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      BrowserAnimationsModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      PaginationModule.forRoot(),\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      ModalModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config: {\n            tokenGetter,\n            whitelistedDomains: ['localhost:5001'],\n            blacklistedRoutes: ['localhost:5001/api/auth']\n         }\n      })\n   ],\n   providers: [\n      AuthService,\n      MatDatepickerModule,\n      ErrorInterceptorProvider,\n      AuthGuard,\n      UserService,\n      SongService,\n      LineupService,\n      LineupResolver,\n      PreventUnsavedChanges,\n      SongResolver,\n      SavedSongResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!loggedIn()\\\" class=\\\"container mt-5\\\">\\n  <div *ngIf=\\\"!registerMode && !loginMode\\\" style=\\\"text-align: center\\\">\\n    <h1>Find the perfect music for your perfect day</h1>\\n    <p class=\\\"lead\\\">Log in or sign up to begin</p>\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n      <button class=\\\"btn btn-info btn-lg\\\" (click)=\\\"loginToggle()\\\">Log in</button>\\n    </div>\\n  </div>\\n\\n\\n\\n\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"loginMode\\\" class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-4\\\">\\n        <app-login (cancelLogin)=\\\"cancelLoginMode($event)\\\"></app-login>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../_services/auth.service';\nimport { LineupService } from '../_services/lineup.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  loginMode = false;\n\n  constructor(private http: HttpClient, private authService: AuthService, private lineupService: LineupService) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  loginToggle() {\n    this.loginMode = true;\n  }\n\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n\n  cancelLoginMode(loginMode: boolean) {\n    this.loginMode = loginMode;\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n\n\n}\n","module.exports = \".container {\\n  text-align: center;\\n}\\n\\n.lineup-item {\\n  margin-bottom: 50px;\\n}\\n\\n.lineup-title {\\n  text-decoration: underline;\\n}\\n\\nh3 {\\n  margin-top: 15px;\\n}\"","module.exports = \"<div *ngIf=\\\"!lineupEditMode\\\" class=\\\"container\\\">\\n    <h3>Your Lineup</h3>\\n    <hr>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Prelude</h5>\\n      <div *ngFor=\\\"let song of lineup.prelude\\\" >\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Family</h5>\\n      <div *ngFor=\\\"let song of lineup.family\\\">\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Bridal Party</h5>\\n      <div *ngFor=\\\"let song of lineup.bridalParty\\\" >\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Processional</h5>\\n      <div *ngFor=\\\"let song of lineup.processional\\\" >\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Unity</h5>\\n      <div *ngFor=\\\"let song of lineup.unity\\\" >\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Recessional</h5>\\n      <div *ngFor=\\\"let song of lineup.recessional\\\" >\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"lineup-item\\\">\\n      <h5 class=\\\"lineup-title\\\">Postlude</h5>\\n      <div *ngFor=\\\"let song of lineup.postlude\\\" >\\n        <p>{{song}}</p>\\n      </div>\\n    </div>\\n    <button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/lineup/edit']\\\" routerLinkActive=\\\"router-link-active\\\">Edit Lineup</button>\\n    \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Lineup } from '../_models/lineup';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { LineupService } from '../_services/lineup.service';\n\n@Component({\n  selector: 'app-lineup',\n  templateUrl: './lineup.component.html',\n  styleUrls: ['./lineup.component.css']\n})\nexport class LineupComponent implements OnInit {\n  lineup: Lineup;\n  lineupEditMode = false;\n  sectionNames = ['prelude', 'family', 'bridalParty', 'processional', 'unity', 'recessional', 'postlude'];\n\n  constructor(private route: ActivatedRoute, private authService: AuthService, private lineupService: LineupService, private router: Router) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.lineup = data['lineup'];\n      console.log(this.lineup);\n      if (this.lineup == null) {\n        console.log('this is null');\n        return this.lineupService.createLineup(this.authService.decodedToken.nameid).subscribe(next => {\n          window.location.reload();\n        });\n      }\n      this.splitSongString();\n\n      // this.lineup.prelude = this.lineup.prelude.split('|').filter((el) => el.length !== 0);\n      // this.lineup.family = this.lineup.family.split('|').filter((el) => el.length !== 0);\n      // this.lineup.bridalParty = this.lineup.bridalParty.split('|').filter((el) => el.length !== 0);\n      // if (this.lineup.processional != null) {\n      //   console.log('this is null')\n      //   this.lineup.processional = this.lineup.processional.split('|').filter((el) => el.length !== 0);\n      // }\n      // if (this.lineup.unity != null) {\n      //   this.lineup.unity = this.lineup.unity.split('|').filter((el) => el.length !== 0);\n      // }\n\n      // if (this.lineup.recessional != null) {\n      //   this.lineup.recessional = this.lineup.recessional.split('|').filter((el) => el.length !== 0);\n      // }\n\n\n      // this.lineup.postlude = this.lineup.postlude.split('|').filter((el) => el.length !== 0);\n    });\n  }\n\n  splitSongString() {\n    for (let i = 0; i < this.sectionNames.length; i++) {\n      if (this.lineup[this.sectionNames[i]] != null && this.lineup[this.sectionNames[i]] !== '') {\n        this.lineup[this.sectionNames[i]] = this.lineup[this.sectionNames[i]].split('|').filter((el) => el.length !== 0);\n      }\n    }\n  }\n\n  lineupEditToggle() {\n    this.lineupEditMode = true;\n  }\n\n  cancelLineupEditMode(lineupEditMode: boolean) {\n    this.lineupEditMode = lineupEditMode;\n  }\n}\n","module.exports = \".container {\\n  text-align: center;\\n}\\n\\n.lineup-item {\\n  margin-bottom: 50px;\\n}\\n\\n.lineup-title {\\n  text-decoration: underline;\\n}\\n\\ninput {\\n  text-align: center;\\n}\\n\\nh3 {\\n  margin-top: 15px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateLineup(['prelude', 'family', 'bridalParty', 'processional', 'unity', 'recessional', 'postlude'])\\\">\\n    <div class=\\\"form-group\\\">\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n          You have made changes. Any unsaved changes will be lost!\\n      </div>\\n      <h3>Your Lineup</h3>\\n      <hr>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Prelude</h5>\\n        <!-- <input name=\\\"prelude\\\" [(ngModel)]=\\\"lineup.prelude\\\" placeholder={{lineup.prelude}}> -->\\n        <div *ngFor=\\\"let song of lineup.prelude; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.prelude, 'prelude')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Family</h5>\\n        <div *ngFor=\\\"let song of lineup.family; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\" >\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.family, 'family')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Bridal Party</h5>\\n        <div *ngFor=\\\"let song of lineup.bridalParty; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.bridalParty, 'bridalParty')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Processional</h5>\\n        <div *ngFor=\\\"let song of lineup.processional; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.processional, 'processional')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Unity</h5>\\n        <div *ngFor=\\\"let song of lineup.unity; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.unity, 'unity')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Recessional</h5>\\n        <div *ngFor=\\\"let song of lineup.recessional; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.recessional, 'recessional')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n      <div class=\\\"lineup-item\\\">\\n        <h5 class=\\\"lineup-title\\\">Postlude</h5>\\n        <div *ngFor=\\\"let song of lineup.postlude; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.postlude, 'postlude')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\n        </div>\\n      </div>\\n    </div>\\n    <button  type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Save Changes</button>\\n  </form>\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"cancel()\\\" [routerLink]=\\\"['/lineup']\\\" routerLinkActive=\\\"router-link-active\\\" >Cancel</button>\\n</div>\\n\"","import { Component, OnInit, ViewChild, Output, EventEmitter, HostListener } from '@angular/core';\nimport { Lineup } from 'src/app/_models/lineup';\nimport { ActivatedRoute, RouterLink, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { LineupService } from 'src/app/_services/lineup.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-lineup-edit',\n  templateUrl: './lineupEdit.component.html',\n  styleUrls: ['./lineupEdit.component.css']\n})\nexport class LineupEditComponent implements OnInit {\n  @Output() cancelLineupEdit = new EventEmitter();\n  @ViewChild('editForm') editForm: NgForm;\n  lineup: Lineup;\n  updateSection: any;\n  sectionNames = ['prelude', 'family', 'bridalParty', 'processional', 'unity', 'recessional', 'postlude'];\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private route: ActivatedRoute,private router: Router, private alertify: AlertifyService,\n     private lineupService: LineupService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.lineup = data['lineup'];\n      this.splitSongString();\n    });\n  }\n\n  splitSongString() {\n    console.log(this.sectionNames);\n    for (let i = 0; i < this.sectionNames.length; i++) {\n      if (this.lineup[this.sectionNames[i]] != null && this.lineup[this.sectionNames[i]] !== '') {\n        this.lineup[this.sectionNames[i]] = this.lineup[this.sectionNames[i]].split('|').filter((el) => el.length !== 0);\n      }\n    }\n  }\n\n  updateLineup(sectionNames) {\n    for (let i = 0; i < this.sectionNames.length; i++) {\n      console.log('This ran ' + [i])\n      if (this.lineup[this.sectionNames[i]] != null && this.lineup[this.sectionNames[i]].length) {\n        const joinedSongArray = this.lineup[this.sectionNames[i]].join('|');\n        this.lineup[this.sectionNames[i]] = joinedSongArray;\n      } else if (this.lineup[this.sectionNames[i]] == null) {\n        this.lineup[this.sectionNames[i]] = '';\n        const joinedNoSongArray = this.lineup[this.sectionNames[i]].toString();\n        this.lineup[this.sectionNames[i]] = joinedNoSongArray;\n      } else {\n        const joinedNoSongArray = this.lineup[this.sectionNames[i]].toString();\n        this.lineup[this.sectionNames[i]] = joinedNoSongArray;\n      }\n    }\n    this.lineupService.updateLineup(this.authService.decodedToken.nameid, this.lineup).subscribe(next => {\n      this.alertify.success('Lineup successfully updated!');\n      this.editForm.reset(this.lineup);\n      this.router.navigate(['lineup']);\n    });\n  }\n\n  cancel() {\n    this.cancelLineupEdit.emit(false);\n  }\n\n  removeSong(songIndex, section, sectionName) {\n    console.log(this.lineup[sectionName]);\n    const removedItemArray = section.filter((song, index) => song[index] !== song[songIndex]);\n    const joinArray = removedItemArray.join('|');\n    console.log(joinArray);\n    this.updateSection = joinArray;\n    this.lineup[sectionName] = this.updateSection.split('|').filter((el) => el.length !== 0);\n    console.log(this.lineup.prelude);\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"container\\\">\\n  <form>\\n\\n  </form>\\n</div> -->\\n\\n<form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Log In</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n  </div>\\n  <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n  <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  model: any = {};\n  @Output() cancelLogin = new EventEmitter();\n\n  constructor(private authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Logged in successfully');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/lineup/:id']);\n    });\n  }\n\n  cancel() {\n    this.cancelLogin.emit(false);\n  }\n\n}\n","module.exports = \".dropdown-toggle, .dropdown-item {\\n  cursor: pointer;\\n}\\n\\n.nav-link {\\n  cursor: pointer;\\n}\\n\\n@media screen and (max-width: 767px) {\\n  .dropdown {\\n    display: none;\\n  }\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\n  <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\" >Wedding Music</a>\\n\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggleNavbar()\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <ul *ngIf='loggedIn()' class=\\\"navbar-nav mr-auto collapse navbar-collapse show\\\" [ngClass]=\\\"{show: navbarOpen}\\\" id=\\\"\\\">\\n        <li *ngIf=\\\"navbarOpen\\\" class=\\\"nav-item\\\">\\n            <a >\\n              Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n            </a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lineup']\\\"  >Lineup</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/songs']\\\"  >Browse Music</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/saved-songs']\\\"  >Saved Songs</a>\\n        </li>\\n        <li *ngIf=\\\"navbarOpen\\\" class=\\\"nav-item\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n  \\n      <div *ngIf='loggedIn()' class=\\\"dropdown\\\" dropdown>\\n        <a class=\\\"dropdown-toggle\\\" dropdownToggle>\\n          Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n        </a>\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-user\\\"></i>Logout</a>\\n        </div>\\n      </div>\\n  \\n      <!-- <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\" >\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n      </form> -->\\n  </div>\\n</nav> \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  navbarOpen = false;\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  // login() {\n  //   this.authService.login(this.model).subscribe(next => {\n  //     this.alertify.success('Logged in successfully');\n  //   }, error => {\n  //     this.alertify.error(error);\n  //   }, () => {\n  //     this.router.navigate(['/lineup/']);\n  //   });\n  // }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n  toggleNavbar() {\n    this.navbarOpen = !this.navbarOpen;\n  }\n\n  closeNavbarAfterSelection() {\n    this.navbarOpen = false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register() && createLineup()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\"  placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please provide a valid email</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched }\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\" >Password is required</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\" >Password must be at least 4 characters</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\" >Password cannot exceed 8 characters</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched || registerForm.get('password').touched && registerForm.hasError('mismatch')}\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\" >Password is required</div>\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('mismatch') && registerForm.get('confirmPassword').touched\\\" >Passwords must match</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('weddingDate').errors && registerForm.get('weddingDate').touched}\\\" class=\\\"form-control\\\"\\n      placeholder=\\\"Wedding Date\\\" formControlName=\\\"weddingDate\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('weddingDate').touched && registerForm.get('weddingDate').hasError('required')\\\">Wedding Date is required</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <p>Which instruments would you like?</p>\\n      <select [ngClass]=\\\"{'is-invalid': registerForm.get('instruments').errors && registerForm.get('instruments').touched}\\\" class=\\\"form-control\\\"\\n       formControlName=\\\"instruments\\\" type=\\\"text\\\">\\n        <option value=\\\"\\\"></option>\\n        <option value=\\\"String Quartet\\\">String Quartet</option>\\n        <option value=\\\"Flute & String Quartet\\\" >Flute & String Quartet</option>\\n        <option value=\\\"Trumpet & String Quartet\\\">Trumpet & String Quartet</option>\\n        <option value=\\\"Violin & Viola\\\">Violin & Viola</option>\\n        <option value=\\\"Violin & Bass\\\">Violin & Bass</option>\\n        <option value=\\\"Violin, Viola, & Bass\\\">Violin, Viola, & Bass</option>\\n        <option value=\\\"2 Violins, Viola, & Bass\\\">2 Violins, Viola, & Bass</option>\\n        <option value=\\\"2 Violins, Viola, Bass & Piano\\\">2 Violins, Viola, Bass & Piano</option>\\n        <option value=\\\"2 Violins, Bass\\\">2 Violins, Bass</option>\\n        <option value=\\\"2 Violins, Bass & Drums\\\">2 Violins, Bass & Drums</option>\\n        <option value=\\\"2 Violins\\\">2 Violins</option>\\n        <option value=\\\"Piano & Violin\\\">Piano & Violin</option>\\n        <option value=\\\"Violin, Bass & Drums\\\">Violin, Bass & Drums</option>\\n        <option value=\\\"Jazz Combo\\\">Jazz Combo</option>\\n      </select> \\n    \\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('instruments').touched && registerForm.get('instruments').hasError('required')\\\">Instruments are required</div>\\n    </div>\\n\\n\\n\\n  \\n\\n    <!-- <p>When is your wedding?</p>\\n  <input [matDatepicker]=\\\"myDatepicker\\\" class=\\\"mg-auto\\\" name=\\\"weddingDate\\\" [(ngModel)]=\\\"model.weddingDate\\\">\\n  <mat-datepicker #myDatepicker></mat-datepicker>\\n  <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle> -->\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div> \\n\\n</form>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport {MatDatepicker} from '@angular/material/datepicker';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { LineupService } from '../_services/lineup.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService,\n    private formBuilder: FormBuilder, private router: Router, private lineupService: LineupService) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-dark-blue'\n    };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required],\n      weddingDate: ['', Validators.required],\n      instruments: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/songs']);\n        });\n      });\n    }\n  }\n\n  createLineup() {\n    console.log('createLineup ran');\n    setTimeout(function() {\n      this.lineupService.createLineup(this.authService.decodedToken.nameid);\n    }, 1000);\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n","import {Routes} from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LineupComponent } from './lineup/lineup.component';\nimport { SongComponent } from './songs/song/song.component';\nimport { SavedSongsComponent } from './saved-songs/saved-songs.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { LineupResolver } from './_resolvers/lineup.resolver';\nimport { LineupEditComponent } from './lineup/lineupEdit/lineupEdit.component';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { SongResolver } from './_resolvers/song.resolver';\nimport { SavedSongResolver } from './_resolvers/savedSong.resolver';\n\nexport const appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'lineup', component: LineupComponent, resolve: {lineup: LineupResolver}},\n      {path: 'lineup/edit', component: LineupEditComponent, resolve: {lineup: LineupResolver}, canDeactivate: [PreventUnsavedChanges]},\n      {path: 'songs', component: SongComponent, resolve: {song: SongResolver}},\n      {path: 'saved-songs', component: SavedSongsComponent, resolve: {song: SavedSongResolver}}\n    ]\n  },\n  {path: '**', redirectTo: '', pathMatch: 'full'}\n];\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h3>Your Saved Songs</h3>\\n    <h2>{{pagination.totalItems}} results</h2>\\n  </div>\\n  \\n\\n<div class=\\\"container mt-5\\\">\\n\\n  <form class=\\\"form-inline w-100 d-flex justify-content-center\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadSongs()\\\" novalidate>\\n  \\n    <div class=\\\"form-group px-2 text-center\\\">\\n      <label for=\\\"genre\\\">Genre: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"songParams.genre\\\">\\n        <option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre.value\\\" >\\n          {{genre.display}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"orderBy\\\">Order by: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"orderBy\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"songParams.orderBy\\\">\\n        <option *ngFor=\\\"let order of orderList\\\" [value]=\\\"order.value\\\" >\\n          {{order.display}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\" >Reset Filter</button>\\n  \\n  </form>\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let song of songs\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-song-card [song]=\\\"song\\\"></app-song-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination \\n      [boundaryLinks]=\\\"true\\\" \\n      [totalItems]=\\\"pagination.totalItems\\\"\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n      [(ngModel)]=\\\"pagination.currentPage\\\"\\n      (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Song } from '../_models/song';\nimport { PaginatedResult, Pagination } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { SongService } from '../_services/song.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-saved-songs',\n  templateUrl: './saved-songs.component.html',\n  styleUrls: ['./saved-songs.component.css']\n})\nexport class SavedSongsComponent implements OnInit {\n  songs: Song[];\n  pagination: Pagination;\n  savedParam: string;\n  songParams: any = {};\n  genreList = [\n    {value: null, display: 'All'},\n    {value: 'classical', display: 'Classical'},\n    {value: 'pop', display: 'Pop'},\n    {value: 'rock', display: 'Rock'},\n    {value: 'blues', display: 'Blues'}\n  ];\n  orderList = [\n    {value: 'title', display: 'Title'},\n    {value: 'artist', display: 'Artist'}\n  ];\n\n  constructor(private authService: AuthService, private songService: SongService, \n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.songs = data['song'].result;\n      this.pagination = data['song'].pagination;\n    });\n    this.savedParam = 'Saved';\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadSongs();\n  }\n\n  resetFilters() {\n    this.songParams.orderBy = 'title';\n    this.songParams.genre = '';\n    this.loadSongs();\n  }\n\n  loadSongs() {\n    this.songService.getSongs(this.pagination.currentPage, this.pagination.itemsPerPage,\n       this.songParams, this.savedParam, this.authService.decodedToken.nameid)\n    .subscribe((res: PaginatedResult<Song[]>) => {\n      this.songs = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \".card:hover img {\\n  -webkit-transform: scale(1.2, 1.2);\\n          transform: scale(1.2, 1.2);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out();\\n  opacity: 0.7;\\n}\\n\\n.card img {\\n  -webkit-transform: scale(1.0, 1.0);\\n          transform: scale(1.0, 1.0);\\n  transition-duration: 500ms;\\n  transition-timing-function: ease-out();\\n}\\n\\n.card-img-wrapper {\\n  overflow: hidden;\\n  position: relative;\\n}\\n\\n.member-icons {\\n  position: absolute;\\n  bottom: -30%;\\n  left: 0; \\n  right: 0;\\n  margin-right: auto;\\n  margin-left: auto;\\n  opacity: 0;\\n}\\n\\n.card-img-wrapper:hover .member-icons {\\n  bottom: 0;\\n  opacity: 1;\\n}\\n\\n.animate {\\n  transition: all 0.3s ease-in-out;\\n}\\n\\nul li .btn {\\n  padding: 15px;\\n}\\n\\n.card-body {\\n  text-align: center;\\n}\\n\\n@media screen and (max-width: 767px) {\\n  ul li .btn{\\n    padding: 25px;\\n  }\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"https://i.scdn.co/image/7bcb62c3da44e5377f74f257d24b728c7a92fb03\\\" alt=\\\"{{song.title}}\\\">\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\" ><i class=\\\"fa fa-plus\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"saveSong(song.id) \\\" ><i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button (click)=previewSong(song.title,song.sampleArtist) class=\\\"btn btn-primary\\\"><i target=\\\"_blank\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"fa fa-play\\\"><a></a></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-music\\\"></i> {{song.title}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center fa fa-user\\\">{{song.artist}}</p>\\n  </div>\\n</div>\\n\\n<ng-template #template class=\\\"text-center\\\">\\n  <div class=\\\"modal-header\\\">\\n\\n      <h4 class=\\\"modal-title\\\">Add Song</h4>\\n    \\n    \\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    \\n  </div>\\n  <div class=\\\"modal-body text-center\\\">\\n    <p>{{song.title}} by {{song.artist}}</p>\\n    <form #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"addToLineup()\\\" [formGroup]=\\\"addSongForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <select class=\\\"form-control\\\" formControlName=\\\"section\\\">\\n          <option value=\\\"\\\"></option>\\n          <option value=\\\"prelude\\\">Prelude</option>\\n          <option value=\\\"family\\\">Family</option>\\n          <option value=\\\"bridalParty\\\">Bridal Party</option>\\n          <option value=\\\"processional\\\">Processional</option>\\n          <option value=\\\"unity\\\">Unity</option>\\n          <option value=\\\"recessional\\\">Recessional</option>\\n          <option value=\\\"postlude\\\">Postlude</option>\\n        </select>\\n      </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Add</button>\\n    </form>\\n  </div>\\n</ng-template>\"","import { Component, OnInit, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { Song } from 'src/app/_models/song';\nimport { SongService } from 'src/app/_services/song.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\nimport { FormGroup, NgForm, FormBuilder, FormControl } from '@angular/forms';\nimport { Lineup } from 'src/app/_models/lineup';\nimport { LineupService } from 'src/app/_services/lineup.service';\n\n\n\n\n\n@Component({\n  selector: 'app-song-card',\n  templateUrl: './song-card.component.html',\n  styleUrls: ['./song-card.component.css']\n})\nexport class SongCardComponent implements OnInit {\n  @Input() song: Song;\n  addSongForm: FormGroup;\n  modalRef: BsModalRef;\n  lineup: Lineup;\n\n\n  constructor(private songService: SongService, private alertify: AlertifyService, private route: ActivatedRoute,\n     http: HttpClient, private authService: AuthService, private modalService: BsModalService,\n      private formBuilder: FormBuilder, private lineupService: LineupService) { }\n\n  ngOnInit() {\n    this.lineupService.getLineup(this.authService.decodedToken.nameid).subscribe(data => {\n      this.lineup = data;\n    });\n  }\n\n\n\n\n  saveSong(songId: number) {\n    this.songService.savedSong(this.authService.decodedToken.nameid, songId).subscribe(data => {\n      this.alertify.success('You have saved ' + this.song.title);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  // attempting to retrieve the previewUrl directly from backend results in a 500 error\n  previewSong(title, artist) {\n    this.songService.getSpotify(title, artist).subscribe((res: Response) => {\n      // @ts-ignore\n      if (res.preview_url !== null) {\n        // @ts-ignore\n        window.open(res.preview_url, '_blank', 'top=500,left=500,width=200,height=100');\n        // @ts-ignore\n      } else if (res.preview_url === null) {\n        this.songService.getSpotifyAlt(title, artist).subscribe((response: Response) => {\n          // @ts-ignore\n          if (response.preview_url !== null) {\n          // @ts-ignore\n            window.open(response.preview_url, '_blank', 'top=500,left=500,width=200,height=100');\n          } else {\n            this.alertify.error('Sorry, there is no sample for this selection');\n          }\n        });\n      } else {\n        this.alertify.error('Sorry, there is no sample for this selection');\n      }\n    });\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.addSongForm = this.formBuilder.group({section: [''], song: `|${this.song.title} by ${this.song.artist}`});\n    this.modalRef = this.modalService.show(template);\n  }\n\n  updateLineup() {\n    console.log(this.lineup[this.addSongForm.value.section]);\n    if (this.lineup[this.addSongForm.value.section] == null) {\n      this.lineup[this.addSongForm.value.section] = '';\n    }\n    this.lineup[this.addSongForm.value.section] += this.addSongForm.value.song;\n    this.lineupService.updateLineup(this.authService.decodedToken.nameid, this.lineup).subscribe(next => {\n      this.alertify.success('Lineup successfully updated!');\n      this.addSongForm.reset(this.lineup);\n    });\n  }\n\n  addToLineup() {\n\n    console.log(this.addSongForm.value.song);\n\n    this.updateLineup();\n    this.modalRef.hide();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h3>Music Selection</h3>\\n    <h2>{{pagination.totalItems}} results</h2>\\n  </div>\\n  \\n\\n<div class=\\\"container mt-5\\\">\\n\\n  <form class=\\\"form-inline w-100 d-flex justify-content-center\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadSongs()\\\" novalidate>\\n  \\n    <div class=\\\"form-group px-2 text-center\\\">\\n      <label for=\\\"genre\\\">Genre: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px;\\\" id=\\\"genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"songParams.genre\\\">\\n        <option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre.value\\\" >\\n          {{genre.display}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"form-group px-2\\\">\\n      <label for=\\\"orderBy\\\">Order by: </label>\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"orderBy\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"songParams.orderBy\\\">\\n        <option *ngFor=\\\"let order of orderList\\\" [value]=\\\"order.value\\\" >\\n          {{order.display}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\" >Reset Filter</button>\\n  \\n  </form>\\n  <br>\\n\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let song of songs\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n      <app-song-card [song]=\\\"song\\\"></app-song-card>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination \\n      [boundaryLinks]=\\\"true\\\" \\n      [totalItems]=\\\"pagination.totalItems\\\"\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n      [(ngModel)]=\\\"pagination.currentPage\\\"\\n      (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n\\n  </pagination>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SongService } from '../../_services/song.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { Song } from '../../_models/song';\nimport { ActivatedRoute } from '@angular/router';\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\nimport { ignoreElements } from 'rxjs/operators';\nimport { LineupService } from 'src/app/_services/lineup.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-song',\n  templateUrl: './song.component.html',\n  styleUrls: ['./song.component.css']\n})\nexport class SongComponent implements OnInit {\n  songs: Song[];\n  songParams: any = {};\n  genreList = [\n    {value: null, display: 'All'},\n    {value: 'classical', display: 'Classical'},\n    {value: 'pop', display: 'Pop'},\n    {value: 'rock', display: 'Rock'},\n    {value: 'blues', display: 'Blues'}\n  ];\n  orderList = [\n    {value: 'title', display: 'Title'},\n    {value: 'artist', display: 'Artist'}\n  ];\n  pagination: Pagination;\n\n  constructor(private songService: SongService, private alertify: AlertifyService,\n     private route: ActivatedRoute, private lineupService: LineupService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.songs = data['song'].result;\n      this.pagination = data['song'].pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadSongs();\n  }\n\n  resetFilters() {\n    this.songParams.orderBy = 'title';\n    this.songParams.genre = '';\n    this.loadSongs();\n  }\n\n  loadSongs() {\n    this.songService.getSongs(this.pagination.currentPage, this.pagination.itemsPerPage, this.songParams, null, null)\n    .subscribe((res: PaginatedResult<Song[]>) => {\n      this.songs = res.result;\n      this.pagination = res.pagination;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5001/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}