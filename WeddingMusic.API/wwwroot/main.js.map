{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/lineup.resolver.ts","webpack:///./src/app/_resolvers/savedSong.resolver.ts","webpack:///./src/app/_resolvers/song.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/lineup.service.ts","webpack:///./src/app/_services/song.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lineup/lineup.component.css","webpack:///./src/app/lineup/lineup.component.html","webpack:///./src/app/lineup/lineup.component.ts","webpack:///./src/app/lineup/lineupEdit/lineupEdit.component.css","webpack:///./src/app/lineup/lineupEdit/lineupEdit.component.html","webpack:///./src/app/lineup/lineupEdit/lineupEdit.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/saved-songs/saved-songs.component.css","webpack:///./src/app/saved-songs/saved-songs.component.html","webpack:///./src/app/saved-songs/saved-songs.component.ts","webpack:///./src/app/songs/song-card/song-card.component.css","webpack:///./src/app/songs/song-card/song-card.component.html","webpack:///./src/app/songs/song-card/song-card.component.ts","webpack:///./src/app/songs/song/song.component.css","webpack:///./src/app/songs/song/song.component.html","webpack:///./src/app/songs/song/song.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AACU;AACG;AACQ;AAMhE;IACE,mBAAoB,WAAwB,EAAU,MAAc,EAAU,QAAyB;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAiB;IAAG,CAAC;IAC3G,+BAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAVU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAEiC,kEAAW,EAAkB,sDAAM,EAAoB,0EAAe;OAD5F,SAAS,CAWrB;IAAD,gBAAC;CAAA;AAXqB;;;;;;;;;;;;;;;;;;;;;;ACTqB;AAK3C;IAAA;IAOA,CAAC;IANC,6CAAa,GAAb,UAAc,SAA8B;QAC1C,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9D,MAAM,CAAC,OAAO,CAAC,sEAAsE,CAAC,CAAC;QACzF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IANU,qBAAqB;QADjC,gEAAU,EAAE;OACA,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;ACElC;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVwC;AACiC;AAEd;AACI;AAC1B;AACM;AACY;AAGxD;IACE,wBAAoB,aAA4B,EAAU,MAAc,EAC9D,QAAyB,EAAU,WAAwB;QADjD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC9D,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEzE,gCAAO,GAAP,UAAQ,KAA6B;QAArC,iBAUC;QARC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aACxE,IAAI,CACH,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAdU,cAAc;QAD1B,gEAAU,EAAE;yCAEwB,sEAAa,EAAkB,sDAAM;YACpD,0EAAe,EAAuB,kEAAW;OAF1D,cAAc,CAgB1B;IAAD,qBAAC;CAAA;AAhB0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACiC;AACV;AAC1B;AACM;AACY;AAEA;AAGxD;IAME,2BAAoB,WAAwB,EAAU,MAAc,EAC1D,QAAyB,EAAU,WAAwB;QADjD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QANrE,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,OAAO,CAAC;QACrB,WAAM,GAAG,CAAC,CAAC;IAG6D,CAAC;IAEzE,mCAAO,GAAP,UAAQ,KAA6B;QAArC,iBASC;QARC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CACvG,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAlBU,iBAAiB;QAD7B,gEAAU,EAAE;yCAOsB,kEAAW,EAAkB,sDAAM;YAChD,0EAAe,EAAuB,kEAAW;OAP1D,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVW;AACiC;AACV;AAC1B;AACM;AACY;AAEA;AAGxD;IAKE,sBAAoB,WAAwB,EAAU,MAAc,EAC1D,QAAyB,EAAU,WAAwB;QADjD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC1D,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAa;QALrE,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,WAAM,GAAG,CAAC,CAAC;IAG6D,CAAC;IAEzE,8BAAO,GAAP,UAAQ,KAA6B;QAArC,iBAQC;QAPC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAC5F,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC/C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAhBU,YAAY;QADxB,gEAAU,EAAE;yCAMsB,kEAAW,EAAkB,sDAAM;YAChD,0EAAe,EAAuB,kEAAW;OAN1D,YAAY,CAkBxB;IAAD,mBAAC;CAAA;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;ACVkB;AAM3C;IAEE;IAAgB,CAAC;IAEjB,iCAAO,GAAP,UAAQ,OAAe,EAAE,UAAqB;QAC5C,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YAClC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,UAAU,EAAE,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,CAAC,EAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,+BAAK,GAAL,UAAM,OAAe;QACnB,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAED,iCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED,iCAAO,GAAP,UAAQ,OAAe;QACrB,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IA1BU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,eAAe,CA4B3B;IAAD,sBAAC;CAAA;AA5B2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACO;AACf;AACiB;AACO;AAEV;AAKjD;IAKA,qBAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAJxE,YAAO,GAAG,wEAAW,CAAC,MAAM,GAAI,OAAO,CAAC;QACxC,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAGyC,CAAC;IAE7E,2BAAK,GAAL,UAAM,KAAU;QAAhB,iBAWC;QAVC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,KAAK,CAAC;aACjD,IAAI,CACH,0DAAG,CAAC,UAAC,QAAa;YAChB,IAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,8BAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IA3BU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMwB,+DAAU,EAAyB,6DAAa;OAL7D,WAAW,CA6BvB;IAAD,kBAAC;CAAA;AA7BuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AACuF;AACpF;AACF;AAG5C;IAAA;IA6BA,CAAC;IA5BC,oCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAChD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,iEAAU,CAAC,eAAK;YACd,EAAE,CAAC,CAAC,KAAK,YAAY,sEAAiB,CAAC,CAAC,CAAC;gBACvC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,uDAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACtC,CAAC;gBACD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,uDAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACjC,CAAC;gBACD,IAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAChE,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACrB,MAAM,CAAC,uDAAU,CAAC,gBAAgB,CAAC,CAAC;gBACtC,CAAC;gBACD,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;gBACvC,IAAI,gBAAgB,GAAG,EAAE,CAAC;gBAC1B,EAAE,CAAC,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACnD,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC;wBAC9B,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BACrB,gBAAgB,IAAI,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;wBAC9C,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,uDAAU,CAAC,gBAAgB,IAAI,WAAW,IAAI,cAAc,CAAC,CAAC;YACvE,CAAC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA5BU,gBAAgB;QAD5B,gEAAU,EAAE;OACA,gBAAgB,CA6B5B;IAAD,uBAAC;CAAA;AA7B4B;AA+BtB,IAAM,wBAAwB,GAAG;IACtC,OAAO,EAAE,sEAAiB;IAC1B,QAAQ,EAAE,gBAAgB;IAC1B,KAAK,EAAE,IAAI;CACZ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCyC;AACgB;AACT;AAGI;AAKtD;IAIE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAC7B,cAAS,GAAG,IAAI,mEAAgB,EAAE;IAEM,CAAC;IAEzC,iCAAS,GAAT,UAAU,EAAE;QACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IAE9D,CAAC;IAED,kCAAU,GAAV,UAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC;IACzE,CAAC;IAED,oCAAY,GAAZ,UAAa,EAAU,EAAE,MAAc;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC;IAC9D,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAM;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IArBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,aAAa,CAsBzB;IAAD,oBAAC;CAAA;AAtByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViB;AACgC;AAChB;AAGH;AACnB;AAErC,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;KAC3D,CAAC;CACH,CAAC;AAMF;IAGE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IAEW,CAAC;IAEzC,8BAAQ,GAAR,UAAS,IAAK,EAAE,YAAa,EAAE,UAAW,EAAE,UAAW,EAAE,MAAO;QAC9D,IAAM,eAAe,GAA4B,IAAI,kEAAe,EAAU,CAAC;QAE/E,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAE9B,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC;QAID,EAAE,CAAC,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YAClD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,CAAC,CAAC;YAC3B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC1C,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC3C,CAAC;QAGD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAC,OAAO,EAAE,UAAU,EAAE,MAAM,UAAC,CAAC;aACjF,IAAI,CACH,0DAAG,CAAC,kBAAQ;YACV,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC;YACvC,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC/C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;YAC9E,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QACzB,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;IACxE,CAAC;IAED,gCAAU,GAAV,UAAW,KAAK,EAAE,MAAM;QACtB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QAC9E,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACD,mCAAa,GAAb,UAAc,KAAK,EAAE,MAAM;QACzB,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,cAAc,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QAClF,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,+BAAS,GAAT,UAAU,MAAc,EAAE,MAAc;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,MAAM,GAAG,cAAc,GAAG,MAAM,EAAE,EAAE,CAAC,CAAC;IACxF,CAAC;IA1DU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,WAAW,CA4DvB;IAAD,kBAAC;CAAA;AA5DuB;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBmB;AACoB;AACJ;AAQ3D;IAGE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IAEW,CAAC;IAEzC,8BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IACvD,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAXU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,WAAW,CAYvB;IAAD,kBAAC;CAAA;AAZuB;;;;;;;;;;;;ACVxB,mB;;;;;;;;;;;ACAA,yF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACW;AACD;AAOpD;IAGE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAEY,CAAC;IAEhD,qDAAqD;IACrD,+BAAQ,GAAR;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAXU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIiC,kEAAW;OAHjC,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACa;AACU;AACa;AACF;AACuB;AACnD;AAEA;AACI;AACI;AACD;AACY;AACO;AACb;AACc;AACd;AACvB;AACY;AACM;AACA;AACmB;AAC3B;AACgC;AACpB;AACG;AACL;AACuB;AACtB;AACU;AAE7D;IACJ,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AAsDD;IAAA;IAAyB,CAAC;IAAb,SAAS;QApDrB,8DAAQ,CAAC;YACP,YAAY,EAAE;gBACX,2DAAY;gBACZ,+DAAY;gBACZ,mEAAa;gBACb,+EAAiB;gBACjB,+EAAiB;gBACjB,yEAAa;gBACb,uFAAiB;gBACjB,uFAAmB;gBACnB,yEAAe;gBACf,4FAAmB;gBACnB,sEAAc;aAChB;YACD,OAAO,EAAE;gBACN,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;gBACX,kEAAmB;gBACnB,4FAAuB;gBACvB,qEAAmB;gBACnB,qEAAmB;gBACnB,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,8DAAgB,CAAC,OAAO,EAAE;gBAC1B,gEAAkB,CAAC,OAAO,EAAE;gBAC5B,yDAAW,CAAC,OAAO,EAAE;gBACrB,4DAAY,CAAC,OAAO,CAAC,kDAAS,CAAC;gBAC/B,6DAAS,CAAC,OAAO,CAAC;oBACf,MAAM,EAAE;wBACL,WAAW;wBACX,kBAAkB,EAAE,CAAC,gBAAgB,CAAC;wBACtC,iBAAiB,EAAE,CAAC,yBAAyB,CAAC;qBAChD;iBACH,CAAC;aACJ;YACD,SAAS,EAAE;gBACR,mEAAW;gBACX,qEAAmB;gBACnB,qFAAwB;gBACxB,6DAAS;gBACT,mEAAW;gBACX,mEAAW;gBACX,uEAAa;gBACb,0EAAc;gBACd,4FAAqB;gBACrB,sEAAY;gBACZ,gFAAiB;aACnB;YACD,SAAS,EAAE;gBACR,2DAAY;aACd;SACH,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxFtB,mB;;;;;;;;;;;ACAA,wiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACA;AACM;AACI;AAO5D;IAIE,uBAAoB,IAAgB,EAAU,WAAwB,EAAU,aAA4B;QAAxF,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAH5G,iBAAY,GAAG,KAAK,CAAC;QACrB,cAAS,GAAG,KAAK,CAAC;IAE8F,CAAC;IAEjH,gCAAQ,GAAR;IACA,CAAC;IAED,sCAAc,GAAd;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAGD,0CAAkB,GAAlB,UAAmB,YAAqB;QACtC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,uCAAe,GAAf,UAAgB,SAAkB;QAChC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,gCAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IA5BU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAK0B,+DAAU,EAAuB,kEAAW,EAAyB,sEAAa;OAJjG,aAAa,CAgCzB;IAAD,oBAAC;CAAA;AAhCyB;;;;;;;;;;;;ACV1B,8BAA8B,yBAAyB,KAAK,sBAAsB,0BAA0B,KAAK,uBAAuB,iCAAiC,KAAK,YAAY,uBAAuB,KAAK,C;;;;;;;;;;;ACAtN,wQAAwQ,MAAM,0LAA0L,MAAM,sMAAsM,MAAM,uMAAuM,MAAM,yLAAyL,MAAM,qMAAqM,MAAM,+LAA+L,MAAM,iM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp4C;AAEO;AACD;AACI;AAO5D;IAKE,yBAAoB,KAAqB,EAAU,WAAwB,EAAU,aAA4B,EAAU,MAAc;QAArH,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHzI,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;IAEqC,CAAC;IAE9I,kCAAQ,GAAR;QAAA,iBA8BC;QA7BC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAC5B,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;oBACzF,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,wFAAwF;YACxF,sFAAsF;YACtF,gGAAgG;YAChG,0CAA0C;YAC1C,gCAAgC;YAChC,oGAAoG;YACpG,IAAI;YACJ,mCAAmC;YACnC,sFAAsF;YACtF,IAAI;YAEJ,yCAAyC;YACzC,kGAAkG;YAClG,IAAI;YAGJ,0FAA0F;QAC5F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAe,GAAf;QACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,SAAE,CAAC,MAAM,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;YACnH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,8CAAoB,GAApB,UAAqB,cAAuB;QAC1C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IArDU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAM2B,8DAAc,EAAuB,kEAAW,EAAyB,sEAAa,EAAkB,sDAAM;OAL9H,eAAe,CAsD3B;IAAD,sBAAC;CAAA;AAtD2B;;;;;;;;;;;;ACX5B,8BAA8B,yBAAyB,KAAK,sBAAsB,0BAA0B,KAAK,uBAAuB,iCAAiC,KAAK,eAAe,yBAAyB,KAAK,YAAY,uBAAuB,KAAK,C;;;;;;;;;;;ACAnQ,ulBAAulB,gBAAgB,0DAA0D,wGAAwG,MAAM,uSAAuS,yGAAyG,MAAM,gTAAgT,wGAAwG,MAAM,2TAA2T,wGAAwG,MAAM,+SAA+S,wGAAwG,MAAM,6SAA6S,wGAAwG,MAAM,mTAAmT,wGAAwG,MAAM,0a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApmG;AAE5B;AAC7B;AAC6B;AACJ;AACJ;AAO7D;IAaE,6BAAoB,KAAqB,EAAS,MAAc,EAAU,QAAyB,EACxF,aAA4B,EAAU,WAAwB;QADrD,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QACxF,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAb/D,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAIhD,iBAAY,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,cAAc,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;IAS3B,CAAC;IAP9E,gDAAkB,GAAlB,UAAmB,MAAW;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC;IACH,CAAC;IAKD,sCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAe,GAAf;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,SAAE,CAAC,MAAM,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;YACnH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAY,GAAZ,UAAa,YAAY;QAAzB,iBAoBC;QAnBC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1F,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACvC,IAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;YACxD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;YACxD,CAAC;QACH,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/F,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACtD,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,wCAAU,GAAV,UAAW,SAAS,EAAE,OAAO,EAAE,WAAW;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,IAAM,gBAAgB,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,KAAK,IAAK,WAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,EAA/B,CAA+B,CAAC,CAAC;QAC1F,IAAM,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,EAAE,IAAK,SAAE,CAAC,MAAM,KAAK,CAAC,EAAf,CAAe,CAAC,CAAC;QACzF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAjES;QAAT,4DAAM,EAAE;;iEAAuC;IACzB;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,qDAAM;yDAAC;IAKxC;QADC,kEAAY,CAAC,qBAAqB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iEAK/C;IAXU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAc2B,8DAAc,EAAiB,sDAAM,EAAoB,iFAAe;YACzE,6EAAa,EAAuB,yEAAW;OAd9D,mBAAmB,CAmE/B;IAAD,0BAAC;CAAA;AAnE+B;;;;;;;;;;;;ACbhC,mB;;;;;;;;;;;ACAA,q4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAwE;AAChB;AACQ;AACvB;AAOzC;IAIE,wBAAoB,WAAwB,EAAU,QAAyB,EAAU,MAAc;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHvG,UAAK,GAAQ,EAAE,CAAC;QACN,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEgE,CAAC;IAE5G,iCAAQ,GAAR;IACA,CAAC;IAED,8BAAK,GAAL;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QAClD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,EAAE;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAnBS;QAAT,4DAAM,EAAE;;uDAAkC;IAFhC,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKiC,kEAAW,EAAoB,0EAAe,EAAkB,sDAAM;OAJ5F,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACV3B,oDAAoD,sBAAsB,KAAK,mBAAmB,sBAAsB,KAAK,8CAA8C,iBAAiB,sBAAsB,OAAO,KAAK,C;;;;;;;;;;;ACA9N,8cAA8c,iBAAiB,mHAAmH,mDAAmD,09BAA09B,mDAAmD,oyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhmD;AACM;AACQ;AACvB;AAOzC;IAGE,sBAAmB,WAAwB,EAAU,QAAyB,EAAU,MAAc;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFtG,UAAK,GAAQ,EAAE,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;IACuF,CAAC;IAE3G,+BAAQ,GAAR;IACA,CAAC;IAED,YAAY;IACZ,2DAA2D;IAC3D,uDAAuD;IACvD,kBAAkB;IAClB,kCAAkC;IAClC,eAAe;IACf,0CAA0C;IAC1C,QAAQ;IACR,IAAI;IAEJ,+BAAQ,GAAR;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,6BAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAED,gDAAyB,GAAzB;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAlCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAIgC,kEAAW,EAAoB,0EAAe,EAAkB,sDAAM;OAH3F,YAAY,CAoCxB;IAAD,mBAAC;CAAA;AApCwB;;;;;;;;;;;;ACVzB,mB;;;;;;;;;;;ACAA,oOAAoO,2FAA2F,qPAAqP,2FAA2F,wtBAAwtB,qLAAqL,qhBAAqhB,gGAAgG,ocAAoc,gGAAgG,s7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtmF;AAEvB;AACQ;AACiB;AAGxC;AACmB;AAO5D;IAME,2BAAoB,WAAwB,EAAU,QAAyB,EACrE,WAAwB,EAAU,MAAc,EAAU,aAA4B;QAD5E,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QACrE,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QANtF,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;IAMsD,CAAC;IAErG,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,cAAc,EAAE,iBAAiB;SAClC,CAAC;QACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,8CAAkB,GAAlB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACvF,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IAC/C,CAAC;IAED,kDAAsB,GAAtB,UAAuB,CAAY;QACjC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IAChG,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAaC;QAZC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBAC7C,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YACnD,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,EAAE;gBACD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;oBAC1C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,wCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,UAAU,CAAC;YACT,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxE,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IArDS;QAAT,4DAAM,EAAE;;6DAAqC;IADnC,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOiC,kEAAW,EAAoB,0EAAe;YACxD,0DAAW,EAAkB,sDAAM,EAAyB,sEAAa;OAPrF,iBAAiB,CAwD7B;IAAD,wBAAC;CAAA;AAxD6B;;;;;;;;;;;;;ACd9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACM;AACA;AACc;AACzB;AACa;AACiB;AACC;AACtB;AACU;AAE7D,IAAM,SAAS,GAAW;IAC/B,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;IACpC;QACE,IAAI,EAAE,EAAE;QACR,qBAAqB,EAAE,QAAQ;QAC/B,WAAW,EAAE,CAAC,4DAAS,CAAC;QACxB,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,yEAAc,EAAC,EAAC;YAC/E,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2FAAmB,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,yEAAc,EAAC,EAAE,aAAa,EAAE,CAAC,2FAAqB,CAAC,EAAC;YAChI,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,wEAAa,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,qEAAY,EAAC,EAAC;YACxE,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sFAAmB,EAAE,OAAO,EAAE,EAAC,IAAI,EAAE,+EAAiB,EAAC,EAAC;SAC1F;KACF;IACD,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAC;CAChD,CAAC;;;;;;;;;;;;AC1BF,mB;;;;;;;;;;;ACAA,iGAAiG,uBAAuB,8gBAA8gB,eAAe,2XAA2X,eAAe,41BAA41B,sBAAsB,sBAAsB,qBAAqB,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA14D;AAGM;AACA;AACP;AACe;AAOhE;IAiBE,6BAAoB,WAAwB,EAAU,WAAwB,EACpE,KAAqB,EAAU,QAAyB;QAD9C,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QACpE,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAdlE,eAAU,GAAQ,EAAE,CAAC;QACrB,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC;YAC7B,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAC;YAC1C,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAC;YAChC,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;SACnC,CAAC;QACF,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC;SACrC,CAAC;IAGoE,CAAC;IAEvE,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACjC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAED,yCAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uCAAS,GAAT;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAChF,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC;aACzE,SAAS,CAAC,UAAC,GAA4B;YACtC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAhDU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAkBiC,kEAAW,EAAuB,kEAAW;YAC7D,8DAAc,EAAoB,0EAAe;OAlBvD,mBAAmB,CAkD/B;IAAD,0BAAC;CAAA;AAlD+B;;;;;;;;;;;;ACbhC,mCAAmC,yCAAyC,yCAAyC,iCAAiC,6CAA6C,mBAAmB,KAAK,mBAAmB,yCAAyC,yCAAyC,iCAAiC,6CAA6C,KAAK,2BAA2B,uBAAuB,yBAAyB,KAAK,uBAAuB,yBAAyB,mBAAmB,cAAc,gBAAgB,yBAAyB,wBAAwB,iBAAiB,KAAK,+CAA+C,gBAAgB,iBAAiB,KAAK,kBAAkB,uCAAuC,KAAK,oBAAoB,oBAAoB,KAAK,oBAAoB,yBAAyB,KAAK,8CAA8C,iBAAiB,sBAAsB,OAAO,KAAK,C;;;;;;;;;;;ACA99B,sMAAsM,YAAY,wuBAAwuB,YAAY,gFAAgF,aAAa,8UAA8U,qGAAqG,YAAY,MAAM,aAAa,4yB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp6C;AAEpB;AACQ;AACpB;AACc;AACF;AACF;AACkB;AAEZ;AAWjE;IAOE,2BAAoB,WAAwB,EAAU,QAAyB,EAAU,KAAqB,EAC3G,IAAgB,EAAU,WAAwB,EAAU,YAA4B,EAC/E,WAAwB,EAAU,aAA4B;QAFtD,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QACjF,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAC/E,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE/E,oCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/E,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAKD,oCAAQ,GAAR,UAAS,MAAc;QAAvB,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACrF,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7D,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qFAAqF;IACrF,uCAAW,GAAX,UAAY,KAAK,EAAE,MAAM;QAAzB,iBAqBC;QApBC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,GAAa;YACjE,aAAa;YACb,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC7B,aAAa;gBACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,uCAAuC,CAAC,CAAC;gBAChF,aAAa;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;gBACpC,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,QAAkB;oBACzE,aAAa;oBACb,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;wBACpC,aAAa;wBACX,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,uCAAuC,CAAC,CAAC;oBACvF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;oBACtE,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YACtE,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,QAA0B;QAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAI,IAAI,CAAC,IAAI,CAAC,KAAK,YAAO,IAAI,CAAC,IAAI,CAAC,MAAQ,EAAC,CAAC,CAAC;QAC/G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAUC;QATC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;QAC3E,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/F,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACtD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QAEE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEzC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IA1EQ;QAAR,2DAAK,EAAE;;mDAAY;IADT,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAQiC,yEAAW,EAAoB,iFAAe,EAAiB,8DAAc;YACrG,+DAAU,EAAuB,yEAAW,EAAwB,4DAAc;YAClE,0DAAW,EAAyB,6EAAa;OAT/D,iBAAiB,CA6E7B;IAAD,wBAAC;CAAA;AA7E6B;;;;;;;;;;;;ACrB9B,mB;;;;;;;;;;;ACAA,gGAAgG,uBAAuB,gXAAgX,+JAA+J,eAAe,2XAA2X,eAAe,41BAA41B,sBAAsB,sBAAsB,qBAAqB,6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA14D;AACS;AACQ;AAElB;AAGgB;AACJ;AAO7D;IAgBE,uBAAoB,WAAwB,EAAU,QAAyB,EACpE,KAAqB,EAAU,aAA4B,EAAU,WAAwB;QADpF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QACpE,UAAK,GAAL,KAAK,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAfxG,eAAU,GAAQ,EAAE,CAAC;QACrB,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC;YAC7B,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAC;YAC1C,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC;YAC9B,EAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAC;YAChC,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;SACnC,CAAC;QACF,cAAS,GAAG;YACV,EAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAC;YAClC,EAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAC;SACrC,CAAC;IAI0G,CAAC;IAE7G,gCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI;YAC5B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACjC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC;QAC5C,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,oCAAY,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,iCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;aAChH,SAAS,CAAC,UAAC,GAA4B;YACtC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACnC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IA/CU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAiBiC,kEAAW,EAAoB,0EAAe;YAC7D,8DAAc,EAAyB,6EAAa,EAAuB,yEAAW;OAjB7F,aAAa,CAiDzB;IAAD,oBAAC;CAAA;AAjDyB;;;;;;;;;;;;;ACf1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,+DAA+D;CACxE,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router} from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\r\n  canActivate(): boolean {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\r\n\r\n    this.alertify.error('You must be logged in to access this page');\r\n    this.router.navigate(['/home']);\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanDeactivate } from \"@angular/router\";\r\nimport { LineupEditComponent } from \"../lineup/lineupEdit/lineupEdit.component\";\r\n\r\n@Injectable()\r\nexport class PreventUnsavedChanges implements CanDeactivate<LineupEditComponent> {\r\n  canDeactivate(component: LineupEditComponent) {\r\n    if (component.editForm.dirty && !component.editForm.submitted) {\r\n      return confirm('Are you sure you want to continue? Any unsaved changes will be lost!');\r\n    }\r\n    return true;\r\n  }\r\n}","export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  result: T;\r\n  pagination: Pagination;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Lineup } from '../_models/lineup';\r\nimport { LineupService } from '../_services/lineup.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class LineupResolver implements Resolve<Lineup> {\r\n  constructor(private lineupService: LineupService, private router: Router,\r\n    private alertify: AlertifyService, private authService: AuthService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Lineup> {\r\n\r\n    return this.lineupService.getLineup(this.authService.decodedToken.nameid)\r\n    .pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Song } from '../_models/song';\r\nimport { SongService } from '../_services/song.service';\r\n\r\n@Injectable()\r\nexport class SavedSongResolver implements Resolve<Song[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  savedParam = 'Saved';\r\n  userId = 0;\r\n\r\n  constructor(private songService: SongService, private router: Router,\r\n    private alertify: AlertifyService, private authService: AuthService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Song[]> {\r\n    this.userId = this.authService.decodedToken.nameid;\r\n    return this.songService.getSongs(this.pageNumber, this.pageSize, null, this.savedParam, this.userId).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { Song } from '../_models/song';\r\nimport { SongService } from '../_services/song.service';\r\n\r\n@Injectable()\r\nexport class SongResolver implements Resolve<Song[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  userId = 0;\r\n\r\n  constructor(private songService: SongService, private router: Router,\r\n    private alertify: AlertifyService, private authService: AuthService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Song[]> {\r\n    return this.songService.getSongs(this.pageNumber, this.pageSize, null, null, this.userId).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/home']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\ndeclare let alertify: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertifyService {\r\n\r\n  constructor() { }\r\n\r\n  confirm(message: string, okCallback: () => any) {\r\n    alertify.confirm(message, function(e) {\r\n      if (e) {\r\n        okCallback();\r\n      } else {}\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    alertify.success(message);\r\n  }\r\n\r\n  error(message: string) {\r\n    alertify.error(message);\r\n  }\r\n\r\n  warning(message: string) {\r\n    alertify.warning(message);\r\n  }\r\n\r\n  message(message: string) {\r\n    alertify.message(message);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { LineupService } from './lineup.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  baseUrl = environment.apiUrl +  'auth/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\nconstructor(private http: HttpClient, private lineupService: LineupService) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'login', model)\r\n      .pipe(\r\n        map((response: any) => {\r\n          const user = response;\r\n          if (user) {\r\n            localStorage.setItem('token', user.token);\r\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  register(user: User) {\r\n    return this.http.post(this.baseUrl + 'register', user);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          if (error.status === 400) {\r\n            return throwError(error.error);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error.errors;\r\n          let modelStateErrors = '';\r\n          if (serverError && typeof serverError === 'object') {\r\n            for (const key in serverError) {\r\n              if (serverError[key]) {\r\n                modelStateErrors += serverError[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modelStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Lineup } from '../_models/lineup';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LineupService {\r\n  baseUrl = environment.apiUrl;\r\n  jwtHelper = new JwtHelperService()\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLineup(id): Observable<Lineup> {\r\n    return this.http.get<Lineup>(this.baseUrl + 'lineup/' + id);\r\n\r\n  }\r\n\r\n  editLineup(id): Observable<Lineup> {\r\n    return this.http.get<Lineup>(this.baseUrl + 'lineup/' + id + '/edit/');\r\n  }\r\n\r\n  updateLineup(id: number, lineup: Lineup) {\r\n    return this.http.put(this.baseUrl + 'lineup/' + id, lineup);\r\n  }\r\n\r\n  createLineup(userId) {\r\n    return this.http.post(this.baseUrl + 'lineup/' + +userId, {});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Song } from '../_models/song';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n  })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SongService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSongs(page?, itemsPerPage?, songParams?, savedParam?, userId?): Observable<PaginatedResult<Song[]>> {\r\n    const paginatedResult: PaginatedResult<Song[]> = new PaginatedResult<Song[]>();\r\n\r\n    let params = new HttpParams();\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n\r\n\r\n\r\n    if (songParams != null) {\r\n        params = params.append('genre', songParams.genre);\r\n        params = params.append('orderBy', songParams.orderBy);\r\n    }\r\n\r\n    if (savedParam === 'Saved') {\r\n      params = params.append('saved', 'true');\r\n    }\r\n\r\n    if (userId != null) {\r\n      params = params.append('userId', userId);\r\n    }\r\n\r\n\r\n    return this.http.get<Song[]>(this.baseUrl + 'songs/', {observe: 'response', params})\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') != null) {\r\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n          }\r\n          return paginatedResult;\r\n        })\r\n      );\r\n  }\r\n\r\n  getSong(id): Observable<Song> {\r\n    return this.http.get<Song>(this.baseUrl + 'songs/' + id, httpOptions);\r\n  }\r\n\r\n  getSpotify(title, artist) {\r\n    const track = this.http.get(this.baseUrl + 'spotify/' + title + ' ' + artist);\r\n    return track;\r\n  }\r\n  getSpotifyAlt(title, artist) {\r\n    const track = this.http.get(this.baseUrl + 'spotify/alt/' + title + ' ' + artist);\r\n    return track;\r\n  }\r\n\r\n  savedSong(userId: number, songId: number) {\r\n    return this.http.post(this.baseUrl + 'songs/' + userId + '/saved-song/' + songId, {});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.baseUrl + 'users');\r\n  }\r\n\r\n  getUser(id): Observable<User> {\r\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport {AuthService} from './_services/auth.service';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  jwtHelper = new JwtHelperService();\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  // tslint:disable-next-line: use-life-cycle-interface\r\n  ngOnInit() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatDatepickerModule, MatNativeDateModule} from '@angular/material';\r\nimport {BsDropdownModule, BsDatepickerModule, PaginationModule, ModalModule} from 'ngx-bootstrap';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { SongComponent } from './songs/song/song.component';\r\nimport { SavedSongsComponent } from './saved-songs/saved-songs.component';\r\nimport { LineupComponent } from './lineup/lineup.component';\r\nimport { appRoutes } from './routes';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { UserService } from './_services/user.service';\r\nimport { SongService } from './_services/song.service';\r\nimport { SongCardComponent } from './songs/song-card/song-card.component';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { LineupEditComponent } from './lineup/lineupEdit/lineupEdit.component';\r\nimport { LineupService } from './_services/lineup.service';\r\nimport { LineupResolver } from './_resolvers/lineup.resolver';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { SongResolver } from './_resolvers/song.resolver';\r\nimport { SavedSongResolver } from './_resolvers/savedSong.resolver';\r\n\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      RegisterComponent,\r\n      SongComponent,\r\n      SongCardComponent,\r\n      SavedSongsComponent,\r\n      LineupComponent,\r\n      LineupEditComponent,\r\n      LoginComponent\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      BrowserAnimationsModule,\r\n      MatDatepickerModule,\r\n      MatNativeDateModule,\r\n      PaginationModule.forRoot(),\r\n      BsDropdownModule.forRoot(),\r\n      BsDatepickerModule.forRoot(),\r\n      ModalModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      JwtModule.forRoot({\r\n         config: {\r\n            tokenGetter,\r\n            whitelistedDomains: ['localhost:5001'],\r\n            blacklistedRoutes: ['localhost:5001/api/auth']\r\n         }\r\n      })\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      MatDatepickerModule,\r\n      ErrorInterceptorProvider,\r\n      AuthGuard,\r\n      UserService,\r\n      SongService,\r\n      LineupService,\r\n      LineupResolver,\r\n      PreventUnsavedChanges,\r\n      SongResolver,\r\n      SavedSongResolver\r\n   ],\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!loggedIn()\\\" class=\\\"container mt-5\\\">\\r\\n  <div *ngIf=\\\"!registerMode && !loginMode\\\" style=\\\"text-align: center\\\">\\r\\n    <h1>Find the perfect music for your perfect day</h1>\\r\\n    <p class=\\\"lead\\\">Log in or sign up to begin</p>\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\r\\n      <button class=\\\"btn btn-info btn-lg\\\" (click)=\\\"loginToggle()\\\">Log in</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"loginMode\\\" class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-4\\\">\\r\\n        <app-login (cancelLogin)=\\\"cancelLoginMode($event)\\\"></app-login>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { LineupService } from '../_services/lineup.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n  loginMode = false;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService, private lineupService: LineupService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  registerToggle() {\r\n    this.registerMode = true;\r\n  }\r\n\r\n  loginToggle() {\r\n    this.loginMode = true;\r\n  }\r\n\r\n\r\n  cancelRegisterMode(registerMode: boolean) {\r\n    this.registerMode = registerMode;\r\n  }\r\n\r\n  cancelLoginMode(loginMode: boolean) {\r\n    this.loginMode = loginMode;\r\n  }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.lineup-item {\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.lineup-title {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin-top: 15px;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"!lineupEditMode\\\" class=\\\"container\\\">\\r\\n    <h3>Your Lineup</h3>\\r\\n    <hr>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Prelude</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.prelude\\\" >\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Family</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.family\\\">\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Bridal Party</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.bridalParty\\\" >\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Processional</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.processional\\\" >\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Unity</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.unity\\\" >\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Recessional</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.recessional\\\" >\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"lineup-item\\\">\\r\\n      <h5 class=\\\"lineup-title\\\">Postlude</h5>\\r\\n      <div *ngFor=\\\"let song of lineup.postlude\\\" >\\r\\n        <p>{{song}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/lineup/edit']\\\" routerLinkActive=\\\"router-link-active\\\">Edit Lineup</button>\\r\\n    \\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Lineup } from '../_models/lineup';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { LineupService } from '../_services/lineup.service';\r\n\r\n@Component({\r\n  selector: 'app-lineup',\r\n  templateUrl: './lineup.component.html',\r\n  styleUrls: ['./lineup.component.css']\r\n})\r\nexport class LineupComponent implements OnInit {\r\n  lineup: Lineup;\r\n  lineupEditMode = false;\r\n  sectionNames = ['prelude', 'family', 'bridalParty', 'processional', 'unity', 'recessional', 'postlude'];\r\n\r\n  constructor(private route: ActivatedRoute, private authService: AuthService, private lineupService: LineupService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.lineup = data['lineup'];\r\n      console.log(this.lineup);\r\n      if (this.lineup == null) {\r\n        console.log('this is null');\r\n        return this.lineupService.createLineup(this.authService.decodedToken.nameid).subscribe(next => {\r\n          window.location.reload();\r\n        });\r\n      }\r\n      this.splitSongString();\r\n\r\n      // this.lineup.prelude = this.lineup.prelude.split('|').filter((el) => el.length !== 0);\r\n      // this.lineup.family = this.lineup.family.split('|').filter((el) => el.length !== 0);\r\n      // this.lineup.bridalParty = this.lineup.bridalParty.split('|').filter((el) => el.length !== 0);\r\n      // if (this.lineup.processional != null) {\r\n      //   console.log('this is null')\r\n      //   this.lineup.processional = this.lineup.processional.split('|').filter((el) => el.length !== 0);\r\n      // }\r\n      // if (this.lineup.unity != null) {\r\n      //   this.lineup.unity = this.lineup.unity.split('|').filter((el) => el.length !== 0);\r\n      // }\r\n\r\n      // if (this.lineup.recessional != null) {\r\n      //   this.lineup.recessional = this.lineup.recessional.split('|').filter((el) => el.length !== 0);\r\n      // }\r\n\r\n\r\n      // this.lineup.postlude = this.lineup.postlude.split('|').filter((el) => el.length !== 0);\r\n    });\r\n  }\r\n\r\n  splitSongString() {\r\n    for (let i = 0; i < this.sectionNames.length; i++) {\r\n      if (this.lineup[this.sectionNames[i]] != null && this.lineup[this.sectionNames[i]] !== '') {\r\n        this.lineup[this.sectionNames[i]] = this.lineup[this.sectionNames[i]].split('|').filter((el) => el.length !== 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  lineupEditToggle() {\r\n    this.lineupEditMode = true;\r\n  }\r\n\r\n  cancelLineupEditMode(lineupEditMode: boolean) {\r\n    this.lineupEditMode = lineupEditMode;\r\n  }\r\n}\r\n","module.exports = \".container {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.lineup-item {\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.lineup-title {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin-top: 15px;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <form #editForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateLineup(['prelude', 'family', 'bridalParty', 'processional', 'unity', 'recessional', 'postlude'])\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\r\\n          You have made changes. Any unsaved changes will be lost!\\r\\n      </div>\\r\\n      <h3>Your Lineup</h3>\\r\\n      <hr>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Prelude</h5>\\r\\n        <!-- <input name=\\\"prelude\\\" [(ngModel)]=\\\"lineup.prelude\\\" placeholder={{lineup.prelude}}> -->\\r\\n        <div *ngFor=\\\"let song of lineup.prelude; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.prelude, 'prelude')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Family</h5>\\r\\n        <div *ngFor=\\\"let song of lineup.family; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\" >\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.family, 'family')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Bridal Party</h5>\\r\\n        <div *ngFor=\\\"let song of lineup.bridalParty; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.bridalParty, 'bridalParty')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Processional</h5>\\r\\n        <div *ngFor=\\\"let song of lineup.processional; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.processional, 'processional')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Unity</h5>\\r\\n        <div *ngFor=\\\"let song of lineup.unity; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.unity, 'unity')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Recessional</h5>\\r\\n        <div *ngFor=\\\"let song of lineup.recessional; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.recessional, 'recessional')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"lineup-item\\\">\\r\\n        <h5 class=\\\"lineup-title\\\">Postlude</h5>\\r\\n        <div *ngFor=\\\"let song of lineup.postlude; let i = index\\\" class=\\\"w-100 d-inline-flex justify-content-center align-middle mt-2\\\">\\r\\n          {{song}}<button type=\\\"button\\\" (click)=\\\"removeSong(i, lineup.postlude, 'postlude')\\\" class=\\\"btn btn-danger ml-3\\\">Remove</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <button  type=\\\"submit\\\" class=\\\"btn btn-success\\\" >Save Changes</button>\\r\\n  </form>\\r\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"cancel()\\\" [routerLink]=\\\"['/lineup']\\\" routerLinkActive=\\\"router-link-active\\\" >Cancel</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { Lineup } from 'src/app/_models/lineup';\r\nimport { ActivatedRoute, RouterLink, Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { LineupService } from 'src/app/_services/lineup.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-lineup-edit',\r\n  templateUrl: './lineupEdit.component.html',\r\n  styleUrls: ['./lineupEdit.component.css']\r\n})\r\nexport class LineupEditComponent implements OnInit {\r\n  @Output() cancelLineupEdit = new EventEmitter();\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  lineup: Lineup;\r\n  updateSection: any;\r\n  sectionNames = ['prelude', 'family', 'bridalParty', 'processional', 'unity', 'recessional', 'postlude'];\r\n  @HostListener('window:beforeunload', ['$event'])\r\n  unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute,private router: Router, private alertify: AlertifyService,\r\n     private lineupService: LineupService, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.lineup = data['lineup'];\r\n      this.splitSongString();\r\n    });\r\n  }\r\n\r\n  splitSongString() {\r\n    console.log(this.sectionNames);\r\n    for (let i = 0; i < this.sectionNames.length; i++) {\r\n      if (this.lineup[this.sectionNames[i]] != null && this.lineup[this.sectionNames[i]] !== '') {\r\n        this.lineup[this.sectionNames[i]] = this.lineup[this.sectionNames[i]].split('|').filter((el) => el.length !== 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateLineup(sectionNames) {\r\n    for (let i = 0; i < this.sectionNames.length; i++) {\r\n      console.log('This ran ' + [i])\r\n      if (this.lineup[this.sectionNames[i]] != null && this.lineup[this.sectionNames[i]].length) {\r\n        const joinedSongArray = this.lineup[this.sectionNames[i]].join('|');\r\n        this.lineup[this.sectionNames[i]] = joinedSongArray;\r\n      } else if (this.lineup[this.sectionNames[i]] == null) {\r\n        this.lineup[this.sectionNames[i]] = '';\r\n        const joinedNoSongArray = this.lineup[this.sectionNames[i]].toString();\r\n        this.lineup[this.sectionNames[i]] = joinedNoSongArray;\r\n      } else {\r\n        const joinedNoSongArray = this.lineup[this.sectionNames[i]].toString();\r\n        this.lineup[this.sectionNames[i]] = joinedNoSongArray;\r\n      }\r\n    }\r\n    this.lineupService.updateLineup(this.authService.decodedToken.nameid, this.lineup).subscribe(next => {\r\n      this.alertify.success('Lineup successfully updated!');\r\n      this.editForm.reset(this.lineup);\r\n      this.router.navigate(['lineup']);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelLineupEdit.emit(false);\r\n  }\r\n\r\n  removeSong(songIndex, section, sectionName) {\r\n    console.log(this.lineup[sectionName]);\r\n    const removedItemArray = section.filter((song, index) => song[index] !== song[songIndex]);\r\n    const joinArray = removedItemArray.join('|');\r\n    console.log(joinArray);\r\n    this.updateSection = joinArray;\r\n    this.lineup[sectionName] = this.updateSection.split('|').filter((el) => el.length !== 0);\r\n    console.log(this.lineup.prelude);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"container\\\">\\r\\n  <form>\\r\\n\\r\\n  </form>\\r\\n</div> -->\\r\\n\\r\\n<form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n  <h2 class=\\\"text-center text-primary\\\">Log In</h2>\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n  </div>\\r\\n  <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n  <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  model: any = {};\r\n  @Output() cancelLogin = new EventEmitter();\r\n\r\n  constructor(private authService: AuthService, private alertify: AlertifyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model).subscribe(next => {\r\n      this.alertify.success('Logged in successfully');\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    }, () => {\r\n      this.router.navigate(['/lineup/:id']);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelLogin.emit(false);\r\n  }\r\n\r\n}\r\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 767px) {\\r\\n  .dropdown {\\r\\n    display: none;\\r\\n  }\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\" >Wedding Music</a>\\r\\n\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"toggleNavbar()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n\\r\\n      <ul *ngIf='loggedIn()' class=\\\"navbar-nav mr-auto collapse navbar-collapse show\\\" [ngClass]=\\\"{show: navbarOpen}\\\" id=\\\"\\\">\\r\\n        <li *ngIf=\\\"navbarOpen\\\" class=\\\"nav-item\\\">\\r\\n            <a >\\r\\n              Welcome {{authService.decodedToken?.unique_name | titlecase}}\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lineup']\\\"  >Lineup</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/songs']\\\"  >Browse Music</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/saved-songs']\\\"  >Saved Songs</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"navbarOpen\\\" class=\\\"nav-item\\\" (click)=\\\"closeNavbarAfterSelection()\\\">\\r\\n          <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n  \\r\\n      <div *ngIf='loggedIn()' class=\\\"dropdown\\\" dropdown>\\r\\n        <a class=\\\"dropdown-toggle\\\" dropdownToggle>\\r\\n          Welcome {{authService.decodedToken?.unique_name | titlecase}}\\r\\n        </a>\\r\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\"fa fa-user\\\"></i>Logout</a>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <!-- <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\" >\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\r\\n        <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\r\\n      </form> -->\\r\\n  </div>\\r\\n</nav> \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n  navbarOpen = false;\r\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // login() {\r\n  //   this.authService.login(this.model).subscribe(next => {\r\n  //     this.alertify.success('Logged in successfully');\r\n  //   }, error => {\r\n  //     this.alertify.error(error);\r\n  //   }, () => {\r\n  //     this.router.navigate(['/lineup/']);\r\n  //   });\r\n  // }\r\n\r\n  loggedIn() {\r\n    return this.authService.loggedIn();\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n    this.alertify.message('logged out');\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.navbarOpen = !this.navbarOpen;\r\n  }\r\n\r\n  closeNavbarAfterSelection() {\r\n    this.navbarOpen = false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register() && createLineup()\\\">\\r\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors && registerForm.get('username').touched }\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\"  placeholder=\\\"Username\\\">\\r\\n    <div class=\\\"invalid-feedback\\\">Please provide a valid email</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched }\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\\\" >Password is required</div>\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\\\" >Password must be at least 4 characters</div>\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\\\" >Password cannot exceed 8 characters</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"password\\\" [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched || registerForm.get('password').touched && registerForm.hasError('mismatch')}\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') && registerForm.get('confirmPassword').touched\\\" >Password is required</div>\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('confirmPassword').hasError('mismatch') && registerForm.get('confirmPassword').touched\\\" >Passwords must match</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input [ngClass]=\\\"{'is-invalid': registerForm.get('weddingDate').errors && registerForm.get('weddingDate').touched}\\\" class=\\\"form-control\\\"\\r\\n      placeholder=\\\"Wedding Date\\\" formControlName=\\\"weddingDate\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\r\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('weddingDate').touched && registerForm.get('weddingDate').hasError('required')\\\">Wedding Date is required</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <p>Which instruments would you like?</p>\\r\\n      <select [ngClass]=\\\"{'is-invalid': registerForm.get('instruments').errors && registerForm.get('instruments').touched}\\\" class=\\\"form-control\\\"\\r\\n       formControlName=\\\"instruments\\\" type=\\\"text\\\">\\r\\n        <option value=\\\"\\\"></option>\\r\\n        <option value=\\\"String Quartet\\\">String Quartet</option>\\r\\n        <option value=\\\"Flute & String Quartet\\\" >Flute & String Quartet</option>\\r\\n        <option value=\\\"Trumpet & String Quartet\\\">Trumpet & String Quartet</option>\\r\\n        <option value=\\\"Violin & Viola\\\">Violin & Viola</option>\\r\\n        <option value=\\\"Violin & Bass\\\">Violin & Bass</option>\\r\\n        <option value=\\\"Violin, Viola, & Bass\\\">Violin, Viola, & Bass</option>\\r\\n        <option value=\\\"2 Violins, Viola, & Bass\\\">2 Violins, Viola, & Bass</option>\\r\\n        <option value=\\\"2 Violins, Viola, Bass & Piano\\\">2 Violins, Viola, Bass & Piano</option>\\r\\n        <option value=\\\"2 Violins, Bass\\\">2 Violins, Bass</option>\\r\\n        <option value=\\\"2 Violins, Bass & Drums\\\">2 Violins, Bass & Drums</option>\\r\\n        <option value=\\\"2 Violins\\\">2 Violins</option>\\r\\n        <option value=\\\"Piano & Violin\\\">Piano & Violin</option>\\r\\n        <option value=\\\"Violin, Bass & Drums\\\">Violin, Bass & Drums</option>\\r\\n        <option value=\\\"Jazz Combo\\\">Jazz Combo</option>\\r\\n      </select> \\r\\n    \\r\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('instruments').touched && registerForm.get('instruments').hasError('required')\\\">Instruments are required</div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n    <!-- <p>When is your wedding?</p>\\r\\n  <input [matDatepicker]=\\\"myDatepicker\\\" class=\\\"mg-auto\\\" name=\\\"weddingDate\\\" [(ngModel)]=\\\"model.weddingDate\\\">\\r\\n  <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n  <mat-datepicker-toggle [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle> -->\\r\\n\\r\\n  <div class=\\\"form-group text-center\\\">\\r\\n    <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Register</button>\\r\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </div> \\r\\n\\r\\n</form>\\r\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport {MatDatepicker} from '@angular/material/datepicker';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\nimport { LineupService } from '../_services/lineup.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(private authService: AuthService, private alertify: AlertifyService,\r\n    private formBuilder: FormBuilder, private router: Router, private lineupService: LineupService) { }\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-dark-blue'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', Validators.required],\r\n      weddingDate: ['', Validators.required],\r\n      instruments: ['', Validators.required]\r\n    }, {validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(() => {\r\n        this.alertify.success('Registration successful');\r\n      }, error => {\r\n        this.alertify.error(error);\r\n      }, () => {\r\n        this.authService.login(this.user).subscribe(() => {\r\n          this.router.navigate(['/songs']);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  createLineup() {\r\n    console.log('createLineup ran');\r\n    setTimeout(function() {\r\n      this.lineupService.createLineup(this.authService.decodedToken.nameid);\r\n    }, 1000);\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n\r\n}\r\n","import {Routes} from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LineupComponent } from './lineup/lineup.component';\r\nimport { SongComponent } from './songs/song/song.component';\r\nimport { SavedSongsComponent } from './saved-songs/saved-songs.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { LineupResolver } from './_resolvers/lineup.resolver';\r\nimport { LineupEditComponent } from './lineup/lineupEdit/lineupEdit.component';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { SongResolver } from './_resolvers/song.resolver';\r\nimport { SavedSongResolver } from './_resolvers/savedSong.resolver';\r\n\r\nexport const appRoutes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'lineup', component: LineupComponent, resolve: {lineup: LineupResolver}},\r\n      {path: 'lineup/edit', component: LineupEditComponent, resolve: {lineup: LineupResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n      {path: 'songs', component: SongComponent, resolve: {song: SongResolver}},\r\n      {path: 'saved-songs', component: SavedSongsComponent, resolve: {song: SavedSongResolver}}\r\n    ]\r\n  },\r\n  {path: '**', redirectTo: '', pathMatch: 'full'}\r\n];\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\r\\n    <h3>Your Saved Songs</h3>\\r\\n    <h2>{{pagination.totalItems}} results</h2>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n<div class=\\\"container mt-5\\\">\\r\\n\\r\\n  <form class=\\\"form-inline w-100 d-flex justify-content-center\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadSongs()\\\" novalidate>\\r\\n  \\r\\n    <div class=\\\"form-group px-2 text-center\\\">\\r\\n      <label for=\\\"genre\\\">Genre: </label>\\r\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"songParams.genre\\\">\\r\\n        <option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre.value\\\" >\\r\\n          {{genre.display}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group px-2\\\">\\r\\n      <label for=\\\"orderBy\\\">Order by: </label>\\r\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"orderBy\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"songParams.orderBy\\\">\\r\\n        <option *ngFor=\\\"let order of orderList\\\" [value]=\\\"order.value\\\" >\\r\\n          {{order.display}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\" >Reset Filter</button>\\r\\n  \\r\\n  </form>\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let song of songs\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\r\\n      <app-song-card [song]=\\\"song\\\"></app-song-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n    <pagination \\r\\n      [boundaryLinks]=\\\"true\\\" \\r\\n      [totalItems]=\\\"pagination.totalItems\\\"\\r\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n      [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n      (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n\\r\\n  </pagination>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Song } from '../_models/song';\r\nimport { PaginatedResult, Pagination } from '../_models/pagination';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { SongService } from '../_services/song.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-saved-songs',\r\n  templateUrl: './saved-songs.component.html',\r\n  styleUrls: ['./saved-songs.component.css']\r\n})\r\nexport class SavedSongsComponent implements OnInit {\r\n  songs: Song[];\r\n  pagination: Pagination;\r\n  savedParam: string;\r\n  songParams: any = {};\r\n  genreList = [\r\n    {value: null, display: 'All'},\r\n    {value: 'classical', display: 'Classical'},\r\n    {value: 'pop', display: 'Pop'},\r\n    {value: 'rock', display: 'Rock'},\r\n    {value: 'blues', display: 'Blues'}\r\n  ];\r\n  orderList = [\r\n    {value: 'title', display: 'Title'},\r\n    {value: 'artist', display: 'Artist'}\r\n  ];\r\n\r\n  constructor(private authService: AuthService, private songService: SongService, \r\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.songs = data['song'].result;\r\n      this.pagination = data['song'].pagination;\r\n    });\r\n    this.savedParam = 'Saved';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadSongs();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.songParams.orderBy = 'title';\r\n    this.songParams.genre = '';\r\n    this.loadSongs();\r\n  }\r\n\r\n  loadSongs() {\r\n    this.songService.getSongs(this.pagination.currentPage, this.pagination.itemsPerPage,\r\n       this.songParams, this.savedParam, this.authService.decodedToken.nameid)\r\n    .subscribe((res: PaginatedResult<Song[]>) => {\r\n      this.songs = res.result;\r\n      this.pagination = res.pagination;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".card:hover img {\\r\\n  -webkit-transform: scale(1.2, 1.2);\\r\\n          transform: scale(1.2, 1.2);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out();\\r\\n  opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n  -webkit-transform: scale(1.0, 1.0);\\r\\n          transform: scale(1.0, 1.0);\\r\\n  transition-duration: 500ms;\\r\\n  transition-timing-function: ease-out();\\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n  position: absolute;\\r\\n  bottom: -30%;\\r\\n  left: 0; \\r\\n  right: 0;\\r\\n  margin-right: auto;\\r\\n  margin-left: auto;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n  bottom: 0;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n  transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\nul li .btn {\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 767px) {\\r\\n  ul li .btn{\\r\\n    padding: 25px;\\r\\n  }\\r\\n}\"","module.exports = \"<div class=\\\"card mb-4\\\">\\r\\n  <div class=\\\"card-img-wrapper\\\">\\r\\n    <img class=\\\"card-img-top\\\" src=\\\"https://i.scdn.co/image/7bcb62c3da44e5377f74f257d24b728c7a92fb03\\\" alt=\\\"{{song.title}}\\\">\\r\\n    <ul class=\\\"list-inline member-icons animate text-center\\\">\\r\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\" ><i class=\\\"fa fa-plus\\\"></i></button></li>\\r\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"saveSong(song.id) \\\" ><i class=\\\"fa fa-heart\\\"></i></button></li>\\r\\n      <li class=\\\"list-inline-item\\\"><button (click)=previewSong(song.title,song.sampleArtist) class=\\\"btn btn-primary\\\"><i target=\\\"_blank\\\" routerLinkActive=\\\"router-link-active\\\" class=\\\"fa fa-play\\\"><a></a></i></button></li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"card-body p-1\\\">\\r\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-music\\\"></i> {{song.title}}\\r\\n    </h6>\\r\\n    <p class=\\\"card-text text-muted text-center fa fa-user\\\">{{song.artist}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #template class=\\\"text-center\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n\\r\\n      <h4 class=\\\"modal-title\\\">Add Song</h4>\\r\\n    \\r\\n    \\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <p>{{song.title}} by {{song.artist}}</p>\\r\\n    <form #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"addToLineup()\\\" [formGroup]=\\\"addSongForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <select class=\\\"form-control\\\" formControlName=\\\"section\\\">\\r\\n          <option value=\\\"\\\"></option>\\r\\n          <option value=\\\"prelude\\\">Prelude</option>\\r\\n          <option value=\\\"family\\\">Family</option>\\r\\n          <option value=\\\"bridalParty\\\">Bridal Party</option>\\r\\n          <option value=\\\"processional\\\">Processional</option>\\r\\n          <option value=\\\"unity\\\">Unity</option>\\r\\n          <option value=\\\"recessional\\\">Recessional</option>\\r\\n          <option value=\\\"postlude\\\">Postlude</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Add</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</ng-template>\"","import { Component, OnInit, Input, TemplateRef, ViewChild } from '@angular/core';\r\nimport { Song } from 'src/app/_models/song';\r\nimport { SongService } from 'src/app/_services/song.service';\r\nimport { AlertifyService } from 'src/app/_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\nimport { FormGroup, NgForm, FormBuilder, FormControl } from '@angular/forms';\r\nimport { Lineup } from 'src/app/_models/lineup';\r\nimport { LineupService } from 'src/app/_services/lineup.service';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-song-card',\r\n  templateUrl: './song-card.component.html',\r\n  styleUrls: ['./song-card.component.css']\r\n})\r\nexport class SongCardComponent implements OnInit {\r\n  @Input() song: Song;\r\n  addSongForm: FormGroup;\r\n  modalRef: BsModalRef;\r\n  lineup: Lineup;\r\n\r\n\r\n  constructor(private songService: SongService, private alertify: AlertifyService, private route: ActivatedRoute,\r\n     http: HttpClient, private authService: AuthService, private modalService: BsModalService,\r\n      private formBuilder: FormBuilder, private lineupService: LineupService) { }\r\n\r\n  ngOnInit() {\r\n    this.lineupService.getLineup(this.authService.decodedToken.nameid).subscribe(data => {\r\n      this.lineup = data;\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  saveSong(songId: number) {\r\n    this.songService.savedSong(this.authService.decodedToken.nameid, songId).subscribe(data => {\r\n      this.alertify.success('You have saved ' + this.song.title);\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  // attempting to retrieve the previewUrl directly from backend results in a 500 error\r\n  previewSong(title, artist) {\r\n    this.songService.getSpotify(title, artist).subscribe((res: Response) => {\r\n      // @ts-ignore\r\n      if (res.preview_url !== null) {\r\n        // @ts-ignore\r\n        window.open(res.preview_url, '_blank', 'top=500,left=500,width=200,height=100');\r\n        // @ts-ignore\r\n      } else if (res.preview_url === null) {\r\n        this.songService.getSpotifyAlt(title, artist).subscribe((response: Response) => {\r\n          // @ts-ignore\r\n          if (response.preview_url !== null) {\r\n          // @ts-ignore\r\n            window.open(response.preview_url, '_blank', 'top=500,left=500,width=200,height=100');\r\n          } else {\r\n            this.alertify.error('Sorry, there is no sample for this selection');\r\n          }\r\n        });\r\n      } else {\r\n        this.alertify.error('Sorry, there is no sample for this selection');\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.addSongForm = this.formBuilder.group({section: [''], song: `|${this.song.title} by ${this.song.artist}`});\r\n    this.modalRef = this.modalService.show(template);\r\n  }\r\n\r\n  updateLineup() {\r\n    console.log(this.lineup[this.addSongForm.value.section]);\r\n    if (this.lineup[this.addSongForm.value.section] == null) {\r\n      this.lineup[this.addSongForm.value.section] = '';\r\n    }\r\n    this.lineup[this.addSongForm.value.section] += this.addSongForm.value.song;\r\n    this.lineupService.updateLineup(this.authService.decodedToken.nameid, this.lineup).subscribe(next => {\r\n      this.alertify.success('Lineup successfully updated!');\r\n      this.addSongForm.reset(this.lineup);\r\n    });\r\n  }\r\n\r\n  addToLineup() {\r\n\r\n    console.log(this.addSongForm.value.song);\r\n\r\n    this.updateLineup();\r\n    this.modalRef.hide();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\r\\n    <h3>Music Selection</h3>\\r\\n    <h2>{{pagination.totalItems}} results</h2>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n<div class=\\\"container mt-5\\\">\\r\\n\\r\\n  <form class=\\\"form-inline w-100 d-flex justify-content-center\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadSongs()\\\" novalidate>\\r\\n  \\r\\n    <div class=\\\"form-group px-2 text-center\\\">\\r\\n      <label for=\\\"genre\\\">Genre: </label>\\r\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px;\\\" id=\\\"genre\\\" name=\\\"genre\\\" [(ngModel)]=\\\"songParams.genre\\\">\\r\\n        <option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre.value\\\" >\\r\\n          {{genre.display}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group px-2\\\">\\r\\n      <label for=\\\"orderBy\\\">Order by: </label>\\r\\n      <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"orderBy\\\" name=\\\"orderBy\\\" [(ngModel)]=\\\"songParams.orderBy\\\">\\r\\n        <option *ngFor=\\\"let order of orderList\\\" [value]=\\\"order.value\\\" >\\r\\n          {{order.display}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" style=\\\"margin-left:10px\\\" (click)=\\\"resetFilters()\\\" >Reset Filter</button>\\r\\n  \\r\\n  </form>\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div *ngFor=\\\"let song of songs\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\r\\n      <app-song-card [song]=\\\"song\\\"></app-song-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center\\\">\\r\\n    <pagination \\r\\n      [boundaryLinks]=\\\"true\\\" \\r\\n      [totalItems]=\\\"pagination.totalItems\\\"\\r\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\r\\n      [(ngModel)]=\\\"pagination.currentPage\\\"\\r\\n      (pageChanged)=\\\"pageChanged($event)\\\"\\r\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\r\\n\\r\\n  </pagination>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SongService } from '../../_services/song.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { Song } from '../../_models/song';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\r\nimport { ignoreElements } from 'rxjs/operators';\r\nimport { LineupService } from 'src/app/_services/lineup.service';\r\nimport { AuthService } from 'src/app/_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-song',\r\n  templateUrl: './song.component.html',\r\n  styleUrls: ['./song.component.css']\r\n})\r\nexport class SongComponent implements OnInit {\r\n  songs: Song[];\r\n  songParams: any = {};\r\n  genreList = [\r\n    {value: null, display: 'All'},\r\n    {value: 'classical', display: 'Classical'},\r\n    {value: 'pop', display: 'Pop'},\r\n    {value: 'rock', display: 'Rock'},\r\n    {value: 'blues', display: 'Blues'}\r\n  ];\r\n  orderList = [\r\n    {value: 'title', display: 'Title'},\r\n    {value: 'artist', display: 'Artist'}\r\n  ];\r\n  pagination: Pagination;\r\n\r\n  constructor(private songService: SongService, private alertify: AlertifyService,\r\n     private route: ActivatedRoute, private lineupService: LineupService, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.songs = data['song'].result;\r\n      this.pagination = data['song'].pagination;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadSongs();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.songParams.orderBy = 'title';\r\n    this.songParams.genre = '';\r\n    this.loadSongs();\r\n  }\r\n\r\n  loadSongs() {\r\n    this.songService.getSongs(this.pagination.currentPage, this.pagination.itemsPerPage, this.songParams, null, null)\r\n    .subscribe((res: PaginatedResult<Song[]>) => {\r\n      this.songs = res.result;\r\n      this.pagination = res.pagination;\r\n    }, error => {\r\n      this.alertify.error(error);\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://wa-app.azurewebsites.net/wa.database.windows.net/api/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}